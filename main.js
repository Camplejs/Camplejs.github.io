(()=>{"use strict";var e={370:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},142:(e,t,n)=>{e.exports=n.p+"images/1.svg"},428:(e,t,n)=>{e.exports=n.p+"images/2.svg"},91:(e,t,n)=>{e.exports=n.p+"images/3.svg"},882:(e,t,n)=>{e.exports=n.p+"images/docs.svg"},305:(e,t,n)=>{e.exports=n.p+"images/files.png"},278:(e,t,n)=>{e.exports=n.p+"images/logo-transparent.png"},631:(e,t,n)=>{e.exports=n.p+"images/logo.png"},525:(e,t,n)=>{e.exports=n.p+"images/menu.svg"},684:(e,t,n)=>{e.exports=n.p+"images/reactivity.svg"},565:(e,t,n)=>{e.exports=n.p+"images/results.png"},559:(e,t,n)=>{e.exports=n.p+"images/ts.svg"}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,n),r.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!e;)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{const e=/\[+(.*?)\]+/g,t=/\{{(.*?)}}/g,a=/(\{\{.*?\}\})/g,o=/\{{{(.*?)}}}/g,r=/\{\{\s*([^}]+)\s*\}\}|([^{}]+)/g,i=/\s+/g,s=/(\!)/g,{appendChild:l,insertBefore:c,removeChild:p,replaceChild:d}=Node.prototype,h=Object.getOwnPropertyDescriptor(CharacterData.prototype,"data").set,m=Object.getOwnPropertyDescriptor(Element.prototype,"className").set,u=Object.getOwnPropertyDescriptor(Node.prototype,"firstChild").get,y=Object.getOwnPropertyDescriptor(Node.prototype,"nextSibling").get,f=(Object.getOwnPropertyDescriptor(Node.prototype,"previousSibling").get,Object.getOwnPropertyDescriptor(Node.prototype,"parentNode").get,DOMTokenList.prototype.add,DOMTokenList.prototype.remove,Node.prototype.cloneNode),{push:g,indexOf:b,map:v,unshift:T,pop:x}=Array.prototype,{split:w}=String.prototype,{setAttribute:k,removeAttribute:D,replaceChildren:E,remove:j,hasAttribute:O,getAttribute:I}=Element.prototype,{has:A,add:C}=Set.prototype,{set:N,has:L,get:_}=Map.prototype,{concat:F}=String.prototype,M=e=>{if(!e.includes("."))return e;{const t=e.split(".");if(t.length>1){const e=t.filter(((e,t)=>0!==t));return{key:t[0],properties:e}}V("Key error")}},V=e=>{throw new Error(e)},S=e=>{let n=!1;return e.replace(t,((e,t)=>{const a=t.trim();return a&&!/^[0-9]+$/.test(a[0])&&(n=!0),e})),n},H=e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,P=e=>JSON.parse(JSON.stringify(e)),K=e=>"[object Function]"===Object.prototype.toString.call(e),B=t=>{const n=t.replace(i,"");return e.test(n)},R=(e,t,n=!0)=>{let a;for(let n=0;n<e.length;n++){const o=e[n];if(o?.id===t){a=o;break}}return a?n?a.value:a:void 0},q=(e,t)=>{if(e&&e.value&&Array.isArray(e.value)){e.value=e.value.map((e=>e.replace(i,"")));const n={import:e.value.join(";"),exportId:e.exportId,index:t,importIndex:e.importIndex};return JSON.stringify(n)}V("Import value is array")};class U{selector;template;style;trimHTML;exportData;constructor(e,t={trimHTML:!1}){this.selector=e||"",this.template="",this.trimHTML=void 0!==t.trimHTML&&t.trimHTML,this.exportData={},this.style=""}render(e="",n={}){if(this.template=((e,n)=>void 0===n?e:e=e.replace(t,((e,t)=>{const a=t.trim();return n[a]&&n[a]._getSelector?((e,t)=>{const n=document.createElement("template");return t.forEach((({selector:e,value:t})=>{void 0!==t&&""!==t&&n.setAttribute(e,t)})),n})(0,[{selector:"data-cample",value:n[a]._getSelector}]).outerHTML:e})))(e,n),"string"==typeof this.selector){const e=document.querySelector(this.selector);e&&(e.innerHTML=this.template),Object.keys(n).forEach((e=>{n[e]._getStyle&&(this.style+=n[e]._getStyle)}));const t=(e,t)=>{e&&this.exportData.hasOwnProperty(e)&&this.exportData[e].components.push(t)},a=(e,t,a,o=0)=>{e&&this.exportData.hasOwnProperty(e)&&(this.exportData[e].value[a][o]=t,this.exportData[e].components.forEach((t=>{t.render(this.trimHTML,e&&this.exportData.hasOwnProperty(e)?this.exportData[e].value:void 0,void 0!==t._getExportId?n[t]._getExportId:void 0,"dynamic")})))};(e=>{if(void 0===e)return;const t=document.createElement("style");t.setAttribute("type","text/css"),t.insertAdjacentHTML("afterbegin",e),document.head.appendChild(t)})(this.style),Object.keys(n).forEach(((e,o)=>{const r=n[e]._getSelector;if(n[e].render(this.trimHTML,r&&this.exportData.hasOwnProperty(r)?this.exportData[r].value:void 0,void 0!==n[e]._getExportId?n[e]._getExportId:n[e]._getExport?o:void 0),r&&this.exportData.hasOwnProperty(r)&&t(r,n[e]),n[e]._getExport){const t=K(n[e]._getExport)?n[e]._getExport(a):n[e]._getExport;t&&(this.exportData=((e,t,n)=>{const a=e;return H(t)?Object.keys(t).forEach(((e,o)=>{if(!a.hasOwnProperty(e)){const t={value:{},components:[]};a[e]=t}const r=t[e];a[e].value[n]=r})):V("Export data is object"),a})(this.exportData,t,void 0!==n[e]._getExportId?n[e]._getExportId:o))}}))}}}const J=(e,t,n,a,o)=>{let r;const i=n=>({element:e,functions:n,currentData:t,importedData:o});Array.isArray(n)?(r=n[0],r(i(a))):K(n)?(r=n,r(i(a))):V("Script is an array or a function")},G=(e,t,n,a,o,r)=>{n&&Object.entries(n).forEach((([n,i])=>{const s=Array.isArray(i)?i[1]:i;e(n,s,t,a,o,r)}))},$=(e,t,n,a)=>{let o;const r=(e,n,a)=>{if(a){if(t){"undefined"!==e&&void 0!==e||V("ExportId included"),"undefined"!==n&&void 0!==n||V("Index included");let r=Array.isArray(a)?a:a.split(";");r=r.map((e=>{if(!e.includes(":")){if(e.includes("[")){e.includes("]")||V("Syntax value error");const t=JSON.parse(e);return Array.isArray(t)||V("Syntax value error"),t}return e}{const t=e.split(":");if(2===t.length)return{value:t[0],index:t[1]};V("Syntax value error")}}));for(let a of r)if(t.hasOwnProperty(e))if(Array.isArray(a))if(2===a.length){const r=a[0],i=a[1],s=t[e][n];s?void 0!==s.data[r]?(o||(o={}),o[r]=s.data[r][i]):void 0!==s.functions[r]?(o||(o={}),o[r]=s.functions[r][i]):V(`Property value "${a[0]}" not found`):V("Data error")}else V("Syntax value error");else{const r=t[e][n],i=(e,t)=>{const n=e[t];Array.isArray(n)?(o||(o={}),o[t]=n[0]):V("Data error")};r?void 0!==r.data[a]?i(r.data,a):void 0!==r.functions[a]?i(r.functions,a):V(`Property value "${a}" not found`):V("Data error")}else V("ExportId not found")}}else V("Nothing to import")};if(e){if(O.call(e,"data-cample-import")){let n=I.call(e,"data-cample-import");if(n)if(t){n=n.replace(i,"");const e=JSON.parse(n);r(e.exportId,e.index?e.index:0,e.import)}else V("Nothing to import")}}else n&&t&&n.exportId&&void 0!==a&&r(n.exportId,a,n.value);return o},z=(e,t,n)=>{let a;if(e)if(t&&t.value){const n=q(t,0);if(n)if(e.hasAttribute("data-cample-import")){let n=e.getAttribute("data-cample-import");if(n){n=n.replace(i,"");const s=JSON.parse(n);if(s.import){"undefined"===s.exportId&&V("ExportId included"),"undefined"===s.index&&V("Index included");const n=JSON.parse(s.import),i=n.data?n.data.split(";"):[],l=n.functions?n.functions.split(";"):[],c=(r=l,(o=i).concat(r.filter((e=>o.indexOf(e)<0))));if(s.exportId===t.exportId){const n={value:((e,t)=>{const n=[],a=[...t];return e.forEach((e=>{if(e.includes("[")&&Array.isArray(JSON.parse(e))){e.includes("]")||V("Syntax value error");const t=JSON.parse(e);t[0]&&-1!==a.indexOf(t[0])&&a.splice(a.indexOf(t[0]),1)}else-1!==a.indexOf(e)&&a.splice(a.indexOf(e),1);n.push(e)})),a.forEach((e=>{n.push(e)})),n})(c,t.value),exportId:s.exportId,importIndex:s.importIndex};a=n;const o=q(n,s.index);o&&e.setAttribute("data-cample-import",o)}else V("ExportId error")}}}else a=t,e.setAttribute("data-cample-import",n)}else void 0!==n&&e.setAttribute("data-cample-import",n);var o,r;return a};class W{dynamicNodes;data;constructor(){this.dynamicNodes=[],this.data={data:{values:[],components:[],currentId:0}}}}class Y{template;selector;style;attributes;exportId;trimHTML;options;constructor(e,t={}){this.selector=e,this.template="",this.options=t,this.trimHTML=t.trimHTML,this.attributes=t.attributes,this.style=t.style,this.exportId=t.exportId}get _getSelector(){return this.selector}get _getStyle(){return this.style}get _getExportId(){return this.exportId}}class X extends Y{importId;import;script;_dynamic;exportDataObjects;export;exportObj;values;dataFunctions;functions;setExportData;constructor(e,t={}){super(e,t),this.script=t.script,this._dynamic=new W,this.import=t.import,this.importId=void 0,this.export=t.export,this.setExportData=void 0,this.exportDataObjects=[],this.exportObj=void 0,this.dataFunctions=t.dataFunctions,this.functions=t.functions,this.values=void 0!==t.values?t.values:void 0}get _getImport(){return this.import}}const Z=(e,t,n,a,o)=>{if(e){const r=()=>{const e=n.map((e=>o(e)));t().apply(void 0,e)};e.addEventListener(a,r)}},Q=(e,t=[])=>{let n=e;for(let e=0;e<t.length;e++)n=n[t[e]];return n},ee=(e,t,n,a,o)=>{const{values:r,render:i}=t;i(e,r,n,a,o)},te=(e,t)=>{if(e.isValue){const n={value:""};return ee(n,e,t,void 0,void 0),n.value}{const n=t[e.originKey];return e.isProperty?Q(n,e.properties):n}},ne=(e,t,n,a)=>{if(e.isValue){const o={value:""};return ee(o,e,t,n,a),o.value}switch(e.originType){case 1:return e.render(t);case 2:return e.render(n);case 3:return a;default:return}},ae=e=>e,oe=e=>!!e,re=e=>{switch(e){case"!":return 1;case"==":return 2;case"!=":return 3;case"===":return 4;case"!==":return 5;case">":return 6;case">=":return 7;case"<":return 8;case"<=":return 9;case"&&":return 10;case"||":return 11;default:return 0}},ie=e=>{switch(e){case 10:return 3;case 11:return 4;default:return 2}},se=(e,t,n)=>{switch(e){case 1:return n?[e=>!e,1]:[oe,2];case 2:return(e,t)=>e==t;case 3:return(e,t)=>e!=t;case 4:return(e,t)=>e===t;case 5:return(e,t)=>e!==t;case 6:return(e,t)=>e>t;case 7:return(e,t)=>e>=t;case 8:return(e,t)=>e<t;case 9:return(e,t)=>e<=t;case 10:return(e,t)=>e&&t;case 11:return(e,t)=>e||t;case 12:case 23:return(e,t)=>!(e==t);case 13:case 22:return(e,t)=>!(e!=t);case 14:case 25:return(e,t)=>!(e===t);case 15:case 24:return(e,t)=>!(e!==t);case 16:return(e,t)=>!(e>t);case 17:return(e,t)=>!(e>=t);case 18:return(e,t)=>!(e<t);case 19:return(e,t)=>!(e<=t);case 20:return(e,t)=>!(e&&t);case 21:return(e,t)=>!(e||t);case 26:return(e,t)=>!!(e>t);case 27:return(e,t)=>!!(e>=t);case 28:return(e,t)=>!!(e<t);case 29:return(e,t)=>!!(e<=t);case 30:return(e,t)=>!(!e||!t);case 31:return(e,t)=>!(!e&&!t);case 32:return n?[(e,n,a,o)=>!t(e,n,a,o),1]:[(e,n,a,o)=>!!t(e,n,a,o),2];case 33:return[t,0];default:return[ae,0]}},le=(e,t,n,a,o)=>{const r=e[0];let l=t;l=l.replace(i,"");let c=w.call(l,/(\(|\)|\|\||&&|>=|<=|!==|===)/g).filter(Boolean);const p=(e,t)=>{!t.includes("!")||t.includes("!=")||t.includes("!==")?e.push(t):t.split(s).filter(Boolean).forEach((t=>{e.push(t)}))};c=c.reduce(((e,t)=>(t.includes("==")&&"!=="!==t&&"==="!==t?t.split(/(==)/g).forEach((t=>{p(e,t)})):t.includes("<")&&"<="!==t?t.split(/(<)/g).forEach((t=>{p(e,t)})):t.includes(">")&&">="!==t?t.split(/(>)/g).forEach((t=>{p(e,t)})):t.includes("!=")&&"!=="!==t?t.split(/(!=)/g).forEach((t=>{p(e,t)})):!t.includes("!")||t.includes("!=")||t.includes("!==")?e.push(t):t.split(s).filter(Boolean).forEach((t=>{e.push(t)})),e)),[]);const d=[],h=c.length-1;-1===h&&V("Condition error"),c.forEach(((e,t)=>{const n="("===e;(n||")"===e)&&d.push({id:t,isOpen:n})}));let m,u=0,y=0,f=0,v=[];const T={id:-1,siblingBrackets:[],range:[0,h]};d.forEach((({id:e,isOpen:t})=>{const n=T.siblingBrackets[y];if(t){const t={id:u++,siblingBrackets:[],range:[e],parent:void 0,path:[...v]};if(n){let e;t.path.forEach((t=>{e=e?e.siblingBrackets[t]:n.siblingBrackets[t]})),e?(t.parent=e,v.push(e.siblingBrackets.length),t.path.push(e.siblingBrackets.length),e.siblingBrackets.push(t)):(t.parent=n,v.push(n.siblingBrackets.length),t.path.push(n.siblingBrackets.length),n.siblingBrackets.push(t)),m=t,f++}else T.siblingBrackets.push(t)}else f?(m||V("Bracket error"),m.range.push(e),m=m.parent,f--,v.pop()):(m=void 0,n||V("Bracket error"),n.range.push(e),y++,v=[])}));const x={operands:[],render:ae},k=(e,t=ae,n=0,a=0)=>({value:e,type:n,render:t,priority:a}),D={...x,connectingOperations:[],operands:[]},E=(e,t)=>({priority:e,value:t}),j=(t,i,s,l)=>{const p=s.siblingBrackets.map((e=>e.range));let d=0,h=!1,m=0;for(let u=t;u<=i;){const t=c[u],y=p[d];if(y?.includes(u)){const e=y[1],t={...x,connectingOperations:[],operands:[]},[n,a]=se(m,r,h),o=k(t,n,a);g.call(l.operands,o),j(u+1,e-1,s.siblingBrackets[d],t),d++,u=e+1,h=!1,m=0}else{const s=re(t);switch(s){case 0:const p=pe(t,e,void 0,n,a,o,!1,!0),d=0===m?33:32,[f,b]=se(d,r,h),v=k(p,f,b,1);g.call(l.operands,v),h=!1,m=0;break;case 1:let T=1;h=!0;let x=c[u+T];for(;1===re(x)&&u<=i;)h=!h,x=c[u+ ++T];u=u+T-1,m=1;break;default:const w=u+1,D=c[w],j=re(D),O=ie(s);if(y?.includes(w)||0===j||1===j){const e={value:s,priority:O,render:se(s,r,h)};g.call(l.operands,e);const t=E(O,e);g.call(l.connectingOperations,t),h=!1,m=0}else V("Condition error")}u++}}};j(0,h,T,D);const O=(e,t,n,a,o)=>{const i=e.value;if(o=o??e.type,void 0!==t.oldBracketType){const e=t.oldBracketType;o=1===e&&1===o?2:1===o||1===e?1:e}i.oldBracketType=o;const s=I(i);if(n)if(t.operands=i.operands,delete t.connectingOperations,t.isFirstOperation=i.isFirstOperation,void 0===t.isFirstOperation&&void 0===s&&0!==o){const e=se(1,r,1===o)[0];t.render=e,t.isFirstOperation=!0}else t.render=i.render;else{if(t.operands[a]=i,void 0===s&&0!==o){const e=se(1,r,1===o)[0];t.operands[a].render=e}delete t.operands[a].connectingOperations}if(0!==o&&void 0!==o&&void 0!==s){const e=((e,t)=>{switch(e){case 2:return 1===t?12:22;case 3:return 1===t?13:23;case 4:return 1===t?14:24;case 5:return 1===t?15:25;case 6:return 1===t?16:26;case 7:return 1===t?17:27;case 8:return 1===t?18:28;case 9:return 1===t?19:29;case 10:return 1===t?20:30;case 11:return 1===t?21:31;default:return e}})(s,o),i=se(e,r);n?(t.render=i,t.isFirstOperation=!1):t.operands[a].render=i}},I=e=>{const t=e.operands.length,{operands:n}=e;t%2==0&&V("Condition error");const a=e.connectingOperations;if(0===a.length){const t=e.operands[0],{type:n,priority:a}=t;return void(0===a&&O(t,e,!0,0,n))}a.sort(((e,t)=>e.priority-t.priority));const o=a.length-1;for(let t=0;t<o;t++){const{value:o}=a[t],r=b.call(n,o),i=r+1,s=n[i],l=r-1,c=n[l];0===s.priority&&O(s,e,!1,i),0===c.priority&&O(c,e,!1,l);const p={operands:[n[l],n[i]],render:o.render};void 0!==s&&void 0!==c||V("Condition error"),e.operands.splice(l,3,p)}const{value:r}=a[o],i=b.call(n,r);e.render=r.render,e.operands.splice(i,1);for(let t=0;t<2;t++){const n=e.operands[t];0===n.priority&&O(n,e,!1,t)}return r.value};I(D);const A=e=>{delete e.priority;const t=e.render,n=e.operands;if(void 0!==n){delete e.connectingOperations,delete e.isFirstOperation,delete e.oldBracketType;const a=n[0],o=n.length;if(2===o){const o=n[1];e.render=(e,n,r)=>t(a.render(e,n,r),o.render(e,n,r))}else 1===o?e.render=(e,n,o)=>t(a.render(e,n,o)):V("Condition error");for(let t=0;t<e.operands.length;t++)A(e.operands[t])}else{delete e.type,delete e.oldType;const n=e.value;if(t===te)n.isValue?e.render=(e,t,a)=>{const o={value:""};return ee(o,n,e,t,a),o.value}:n.isProperty?e.render=(e,t,a)=>{const o=e[n.originKey];return Q(o,n.properties)}:e.render=(e,t,a)=>e[n.originKey];else if(t===ne)if(n.isValue)e.render=(e,t,a)=>{const o={value:""};return ee(o,n,e,t,a),o.value};else switch(n.originType){case 1:if(n.isProperty){if(1===n.properties?.length){const t=n.properties[0];return e.render=(e,n,a)=>e[t]}return e.render=(e,t,a)=>n(e)}return e.render=(e,t,n)=>e;case 2:if(n.isProperty){if(1===n.properties?.length){const t=n.properties[0];return e.render=(e,n,a)=>n[t]}return e.render=(e,t,a)=>n(t)}return e.render=(e,t,n)=>t;case 3:return e.render=(e,t,n)=>n;default:return e.render=(e,t,n)=>{}}else e.render=t.bind(void 0,n)}};return A(D),D},ce=(e,n,o,r,s)=>{const l=S(n);let c=[];l?n.split(a).filter(Boolean).map((n=>{if(S(n)){const a=n.replace(t,((e,t)=>t)),i=pe(a,e,void 0,o,r,s,!1,!0);return i&&c.push({value:i,render:e[0]}),i}return w.call(n,i).filter(Boolean).forEach((t=>{t&&c.push({value:t,render:e[2]})})),n})):c=w.call(n,i).filter(Boolean).map((t=>({value:t,render:e[2]})));const p=1===c.length;return{valueClass:{value:p?c[0]:c,render:p?e[5]:e[6]}}},pe=(t,n,a,o,r,i,s,l)=>{const[c,p,d]=((t,n)=>{const a=H(t),o=(e=>!!e.includes("[")&&(e.includes("]")||V("Syntax value error"),!0))(n);return a?o&&t.properties.length>0&&V("Value error"):o&&(t=t.replace(e,((e,t)=>t))),[t,o,a]})(M(t),t),h=d?c.key:c;let m;if(p)if(l&&V("The presence of value in the condition"),a){const e=a[h];m=((e,t,n,a,o)=>{let r;if(H(t)){r=[];for(const[i,s]of Object.entries(t)){const t=Array.isArray(s),l={condition:le(e,i,n,a,o),values:t?s.map((t=>ce(e,t,n,a,o))):ce(e,s,n,a,o),render:t?e[4]:e[3]};r.push(l)}}else V("Value render error");return r})(n,e,o,r,i)}else V("Values error");const u=d?c.properties:void 0;let y=0;const f=!(!u||!u.length);switch(h){case o:y=1;break;case r:y=2;break;case i:f&&V("Error properties"),y=3}const g=1===m?.length,b={originKey:h,key:p?c:t,originType:y};if(p&&(b.isValue=p),f&&(b.isProperty=f),s&&(b.isClass=s),u&&u.length)if(b.properties=u,1===u.length){const e=u[0];b.render=t=>t[e]}else b.render=e=>Q(e,u);else b.render=n[2];if(p)if(g){const e=m[0];b.values=e,b.render=n[8];const t=e=>{const{valueClass:t}=e;H(t.value)&&(t.render=n[7])},a=e.values;if(Array.isArray(a))for(let e=0;e<a.length;e++)t(a[e]);else t(a)}else b.values=m,b.render=n[9];return b},de=e=>{const t=e.split("(")[0];let n="";return e.replace(/\(([^)]+)\)/g,((e,t)=>{const a=t.replace(/\s/g,"");return n=a,e})),{key:t,arguments:n.split(",")}},he=(e,n,a,i,s,l,c,p,d,f,v,w,E,j,O)=>{const A=((e,t)=>{const n=document.createElement("template");n.innerHTML=t?e.trim():e,n.content.children.length>1&&V("Component include only one node with type 'Element'");const a=e=>{switch(e.nodeType){case Node.ELEMENT_NODE:if("pre"===e.tagName)return;break;case Node.TEXT_NODE:if(!/\S/.test(e.textContent))return void e.remove()}for(let t=0;t<e.childNodes.length;t++)a(e.childNodes.item(t))};return a(n.content.childNodes[0]),n.content.firstElementChild})(n,l),C={rootId:0,id:0},N=[C],L={},_={el:A,nodes:[C]};O&&(_.key={value:[],render:e[0]});let F=-1;const M=[];let H;const R=(n,a,l,d)=>{F++;const h=void 0!==d,m=h?{}:C,f=((e,t,n=null,a=[],o)=>({id:t,parentNode:n,nextNode:null,siblings:[],values:[],path:o?[...o,e]:[...a,e]}))(m,F,a,a?.path,l?.path);if(a){const{siblings:e}=a,t=e.length-1;t>-1&&(e[t].nextNode=f),g.call(e,f)}else H=f;if(h&&(((e,t,n,a,o)=>{e.rootId=t,e.id=n,e.node=a,e.isNext=o})(m,d?l?.id??0:a?.id??0,F,f,d),g.call(N,m)),n.nodeType===Node.ELEMENT_NODE){(e=>{if(e){const t=Array.from(e.childNodes).filter((({nodeType:e,textContent:t})=>e===Node.TEXT_NODE&&""!==t?.trim())),n=t.map((e=>e.textContent)).join().trim();t.length&&S(n)&&t.forEach((t=>{if(t.textContent&&t.nodeValue&&S(t.textContent)){const n=[...t.textContent.matchAll(r)];n.map(((a,o)=>{const r=a[0],i=document.createTextNode(r);o===n.length-1?e.replaceChild(i,t):e.insertBefore(i,t)}))}}))}})(n),((e,n,a,i,s,l,c,p,d,h,m,u,y,f,b)=>{const v=Array.from(a.attributes).filter((e=>S(e.value))),T=(e=void 0,t=void 0,n=0)=>{let a;return e?(a=e,a.elId=s.id):a={id:s.id,type:n,...t},s?.node&&(l[s.id]=s.node.path),g.call(p,a),a},x=t=>({value:t,render:"string"==typeof t?e[2]:e[3]});if(v.length)for(const s of v){const l=s.value;if("key"!==s.name)if("class"!==s.name)if("data-cample-import"!==s.name)if(s.name.includes(":")||s.value.includes("(")||s.value.includes(")")){":"!==s.name[0]&&V("Event error");let e="";l.replace(t,((t,n)=>{const a=n.trim();return e=a,t}));const o=de(e),r=[...o.arguments].filter(Boolean),d=s.name.substring(1),h={elId:0,indexValue:p.length,args:r,keyEvent:d,getEventsData:i,getEventsFunction:b,renderedKey:o,id:c,values:p,key:e};D.call(a,s.name),n.push(T(h))}else{const n=B(l),o={};n||l.replace(t,((t,n)=>{if(!o.hasOwnProperty(n)){const t=pe(n,[e[3],e[4],e[2],e[5],e[6],e[7],e[8],e[9],e[10],e[11]],d,h,m,u);o[n]=t}return n})),T(void 0,{name:s.name,value:n?[l,n]:l,keys:o},2),k.call(a,s.name,"")}else T(void 0,{value:l.replace(o,((e,t)=>t||e))},3);else{const n=Array.from(a.classList),o={value:[],render:e[0]},r=n=>{if(S(n)){const a=n.replace(t,((e,t)=>t));return pe(a,[e[3],e[4],e[2],e[5],e[6],e[7],e[8],e[9],e[10],e[11]],d,h,m,u,!0)}return n};if(1===n.length){const e=r(n[0]);o.value=x(e),delete o.render}else o.value=n.map((e=>x(r(e))));T(void 0,{classes:o},4),k.call(a,"class","")}else if(y&&f){const n=n=>{let a=n[0];if(S(a)){const n=a.replace(t,((e,t)=>t));a=pe(n,[e[3],e[4],e[2],e[5],e[6],e[7],e[8],e[9],e[10],e[11]],d,h,m,u,!1)}return a},o=[...s.value.matchAll(r)];if(1===o.length)f.value=x(n(o[0])),f.render=e[1];else for(const e of o){const t=x(n(e));g.call(f,t)}D.call(a,s.name)}else V("key error")}})(e,M,n,c,m,L,i,f.values,s,w,E,j,O,_.key,p);let a=0;for(let e=u.call(n);e;e=y.call(e)){const t=a-1;R(e,f,f?.siblings[t],!!a++)}}else if(n.nodeType===Node.TEXT_NODE){const a=n.textContent;if(a){const n=(e=>{let n;return e.replace(t,((e,t)=>{const a=t.trim();return a.includes("(")||a.includes(")")?V("Function key includes only in event attr"):n=a,e})),n})(a);if(n){m.isText=!0,L[f.id]=f.path;const t={type:1,key:pe(n,[e[3],e[4],e[2],e[5],e[6],e[7],e[8],e[9],e[10],e[11]],s,w,E,j),text:F};g.call(f.values,t)}}}};R(A,H);const q=[];for(let e=0;e<N.length;e++){const t=N[e];if(void 0!==t.id&&t.id in L){const e=L[t.id];if(q.length){let t=0;const n=e.length;for(let a=n-1;-1<a;a--){const o=e[a];if(q.includes(o)){if(t=b.call(q,o),t+1){const a=[];for(let e=q.length-1;e>t;e--){const e=x.call(q).dynamicNodes;if(e)for(let t=0;t<e.length;t++)g.call(a,e[t])}a.length&&(o.dynamicNodes="dynamicNodes"in o?[...o.dynamicNodes,...a]:a);for(let a=t+1;a<n;a++){const t=e[a];g.call(q,t)}}break}}const a=q[q.length-1];a.dynamicNodes?g.call(a.dynamicNodes,a):a.dynamicNodes=[a]}else{for(let t=0;t<e.length;t++)g.call(q,e[t]);t.dynamicNodes=[t]}}}let U=[],J=0,G=0;d?.(),f?.();for(const{elId:e,values:t,indexValue:n,args:o,keyEvent:r,getEventsData:i,getEventsFunction:s,renderedKey:l,id:c,key:p}of M){const d=s?.(l.key,c,p,v);K(d)||V("Data key is of function type");const h=(e,t)=>{Z(e,d,o,r,(e=>O?i(e,c,t,a):i(e,c)))},m={id:e,type:0,render:(e,t)=>h(e,t)};t[n]=m}const $=e=>{const n=e.key;switch(e.type){case 0:return(e,t,n,a,o,r,i,s,l,c)=>{const{render:p}=t;p(n,s)};case 1:if(n.isValue){const{values:e,render:t}=n;return(a,o,r,i,s,l,c,p,d,m)=>{const u={value:""};t(u,e,s,c,l);const y=u.value;let f=y;h.call(r,y),g.call(a,{render:(n,a,o,i)=>{const s={value:""};t(s,e,n,a,o);const l=s.value;f!==l&&(h.call(r,l),f=l)},type:1,key:n})}}if(!O)return n.isProperty?(e,t,a,o,r,i,s,l,c,p)=>{const d=r[n.originKey],m=Q(d,n.properties);let u=m;h.call(a,m),g.call(e,{render:(e,t,o,r)=>{const i=e[n.originKey],s=Q(i,n.properties);u!==s&&(h.call(a,s),u=s)},type:1,key:n})}:(e,t,a,o,r,i,s,l,c,p)=>{const d=r[n.originKey];let m=d;h.call(a,d),g.call(e,{render:(e,t,o,r)=>{const i=e[n.originKey];m!==i&&(h.call(a,i),m=i)},type:1,key:n})};switch(n.originType){case 1:if(n.isProperty){if(1===n.properties?.length){const e=n.properties[0];return(t,a,o,r,i,s,l,c,p,d)=>{const m=i[e];let u=m;h.call(o,m),g.call(t,{render:(t,n,a,r)=>{const i=t[e];u!==i&&(h.call(o,i),u=i)},type:1,key:n})}}return(e,t,a,o,r,i,s,l,c,p)=>{const d=n.render(r);let m=d;h.call(a,d),g.call(e,{render:(e,t,o,r)=>{const i=n.render(e);m!==i&&(h.call(a,i),m=i)},type:1,key:n})}}return(e,t,a,o,r,i,s,l,c,p)=>{const d=r;let m=d;h.call(a,d),g.call(e,{render:(e,t,n,o)=>{const i=r;m!==i&&(h.call(a,i),m=i)},type:1,key:n})};case 2:return(e,t,a,o,r,i,s,l,c,p)=>{const d=n.render(s);let m=d;h.call(a,d),g.call(e,{render:(e,t,o,r)=>{const i=n.render(t);m!==i&&(h.call(a,i),m=i)},type:1,key:n})};case 3:return(e,t,a,o,r,i,s,l,c,p)=>{const d=i;let m=d;h.call(a,d),g.call(e,{render:(e,t,n,o)=>{const r=n;m!==r&&(h.call(a,r),m=r)},type:1,key:n})};default:return(e,t,a,o,r,i,s,l,c,p)=>{const d=void 0;let m=d;h.call(a,d),g.call(e,{render:(e,t,n,o)=>{const r=void 0;m!==r&&(h.call(a,r),m=r)},type:1,key:n})}}case 2:return(e,n,a,o,r,i,s,l,c,p)=>{const d=(e,r,i)=>{((e,n,a,o)=>{if(e&&a)if(Array.isArray(n.value)){const o=[...n.value],r=o[0].replace(t,((e,t)=>{const n=a({originKey:t,key:t,isValue:o[1],originType:0});return String(n)}));I.call(e,n.name)!==String(r)&&k.call(e,n.name,r)}else{const o=n.value.replace(t,((e,t)=>{const o=n.keys[t],r=a(o);return String(r)}));I.call(e,n.name)!==String(o)&&k.call(e,n.name,o)}})(a,n,(t=>o(t,e,r,i)))};d(r,s,i),g.call(e,{render:d,...n})};case 3:return(e,t,n,o,r,i,s,l,c,p)=>{const d=n.getAttribute("data-cample"),h=t.value;if(h&&d){const e=((e,t,n,a,o)=>{if(e){const{getExportObject:r,renderExportObject:i,createExportObject:s,renderIndexesValue:l,renderImportString:c}=t,p=(e=>{const t={};return Object.entries(e).forEach((([n,a])=>{"data"===n?(t.data||(t.data={}),t.data=P(e.data)):"functions"===n?(t.functions||(t.functions={}),Object.entries(a).forEach((([e,n])=>{t.functions[e]=[...n]}))):V("Template data contains data or functions properties")})),t})(e[n]),d=r(a),h={data:{},functions:{}};let m;if(d){const e=i(o,d.data,p,h),t=r(a);t.data=e,m=t?.index}else s(a,o,p,h),m=a;if(d){const e=l(d.indexesData,o,h);d.indexesData=e}return c({...p},a,h,m)}V("TemplateExport is required")})(p,c,h,a,d);z(n,void 0,e)}else V("Render export error")};default:const{classes:o}=e,{value:r}=o;if(Array.isArray(r))return(e,t,n,a,o,r,i,s,l,c)=>{const{classes:p}=t,{value:d,render:h}=p,u=h(o,d,i,r);""!==u&&m.call(n,u),g.call(e,{render:(e,t,a)=>{const o=h(e,d,t,a);n.className!==o&&m.call(n,o)},...t})};{const e=r.value;if(e.isValue){const{values:t,render:n}=e;return(e,a,o,r,i,s,l,c,p,d)=>{const h={value:""};n(h,t,i,l,s);const u=h.value;""!==u&&m.call(o,u),g.call(e,{render:(e,a,r)=>{const i={value:""};n(i,t,e,a,r);const s=i.value;o.className!==s&&m.call(o,s)},...a})}}if(!O)return e.isProperty?(t,n,a,o,r,i,s,l,c,p)=>{const d=r[e.originKey],h=Q(d,e.properties);""!==h&&m.call(a,h),g.call(t,{render:(t,n,o)=>{const r=t[e.originKey],i=Q(r,e.properties);a.className!==i&&m.call(a,i)},...n})}:(t,n,a,o,r,i,s,l,c,p)=>{const d=r[e.originKey];""!==d&&m.call(a,d),g.call(t,{render:(t,n,o)=>{const r=t[e.originKey];a.className!==r&&m.call(a,r)},...n})};switch(e.originType){case 1:return(t,n,a,o,r,i,s,l,c,p)=>{const d=e.render(r);""!==d&&m.call(a,d),g.call(t,{render:(t,n,o)=>{const r=e.render(t);a.className!==r&&m.call(a,r)},...n})};case 2:return(t,n,a,o,r,i,s,l,c,p)=>{const d=e.render(s);""!==d&&m.call(a,d),g.call(t,{render:(t,n,o)=>{const r=e.render(n);a.className!==r&&m.call(a,r)},...n})};case 3:return(e,t,n,a,o,r,i,s,l,c)=>{const p=String(r);""!==p&&m.call(n,p),g.call(e,{render:(e,t,a)=>{const o=String(r);n.className!==o&&m.call(n,o)},...t})};default:return(e,t,n,a,o,r,i,s,l,c)=>{const p=String(void 0);""!==p&&m.call(n,p),g.call(e,{render:(e,t,a)=>{const o=String(void 0);n.className!==o&&m.call(n,o)},...t})}}}}},W=(e,t,n)=>{const{node:a}=e,o=void 0!==n,r=t.length;let i=o?n:function(){let e=this;for(let n=0;n<r;n++)e=t[n].call(e);return e};const{values:s}=a,l=s.length;if(0!==l)if(1===l){const e=s[0],a=$(e);i=o?function(t,o,r,i,s,l,c,p){const d=n.call(this);return a(t,e,d,o,r,i,s,l,c,p),d}:function(n,o,i,s,l,c,p,d){let h=this;for(let e=0;e<r;e++)h=t[e].call(h);return a(n,e,h,o,i,s,l,c,p,d),h}}else{const e=s.map((e=>$(e))),a=e.length;i=o?function(t,o,r,i,l,c,p,d){const h=n.call(this);for(let n=0;n<a;n++)(0,e[n])(t,s[n],h,o,r,i,l,c,p,d);return h}:function(n,o,i,l,c,p,d,h){let m=this;for(let e=0;e<r;e++)m=t[e].call(m);for(let t=0;t<a;t++)(0,e[t])(n,s[t],m,o,i,l,c,p,d,h);return m}}return i};for(let e=1;e<q.length;e++){const t=q[e],n=t.isNext?y:u,{dynamicNodes:a}=t;if(a){const e=t.id,o={rootId:J,id:e};if(U.length){g.call(U,n);const e=W(t,[...U]);o.render=e,U=[]}else o.render=W(t,[],n);g.call(_.nodes,o),J=J+G+1,G=a.length;for(let t=0;t<a.length;t++){const n=a[t],o=n.id;if(o!==e){const t={rootId:J,id:o},a=[],{path:r}=n.node;for(let o=r.length-1;o>=0;o--){const i=r[o];if(i.id===e){if(1!==a.length){const e=W(n,a);t.render=e}else t.render=W(n,[],a[0]);break}{const e=i.isNext?y:u;T.call(a,e)}}g.call(_.nodes,t)}else G--}}else U.push(n)}const{values:Y}=H,X=Y.length;if(0!==X)if(1===X){const e=Y[0],t=$(e);_.render=function(n,a,o,r,i,s,l,c){t(n,e,this,a,o,r,i,s,l,c)}}else{const e=Y.map((e=>$(e))),t=e.length;_.render=function(n,a,o,r,i,s,l,c){for(let p=0;p<t;p++)(0,e[p])(n,Y[p],this,a,o,r,i,s,l,c)}}return _.nodes.shift(),{obj:_}},me=(e,t,n,a)=>te(e,t),ue=(e,t,n,a)=>{let o="";for(const r of t){const{value:t,render:i}=r,s=i(t,e,n,a);o=F.call(o," ",s).trim()}return o},ye=(e,t,n,a)=>{const{value:o,render:r}=t;return r(o,e,n,a)},fe=e=>e,ge=(e,t,n,a)=>{e.render(t,n,a)},be=(e,t,n,a,o,r)=>{t&&Te(e,n,a,o,r)},ve=(e,t,n,a,o,r)=>{const i=t?n[0]:n[1];Te(e,i,a,o,r)},Te=(e,t,n,a,o)=>{const{value:r,render:i}=t.valueClass;return i(e,r,n,a,o)},xe=(e,t,n,a,o)=>{const{value:r,render:i}=t,s=i(r,n,a,o);e.value+=s},we=(e,t,n,a,o)=>{const r=t.length;for(let i=0;i<r;i++){const{value:r,render:s}=t[i],l=s(r,n,a,o);e.value=F.call(e.value," ",l).trim()}},ke=(e,t,n,a,o)=>{const{value:r,render:i}=t,s=i(r,n,a,o);e.value=s},De=(e,t,n,a,o)=>{const r=t.condition.render(n,a,o),{values:i,render:s}=t;s(e,r,i,n,a,o)},Ee=(e,t,n,a,o)=>{for(let r=0;r<t.length;r++){const i=t[r],s=i.condition.render(n,a,o),{values:l,render:c}=i;c(e,s,l,n,a,o)}},je=(e,t)=>{let n;if(2===t.length){const a=t[1];if(e.hasOwnProperty(a)){const o=e[a];n=t[0].bind(void 0,o)}else V(`Function ${a} not found`)}else V("Data error");return n},Oe=(e,t,n=!1,a)=>{const o=a??(e=>{let t,n=!1,a=[];if(H(e)){const o=e;t=o.key,o.properties.length>0&&(n=!0,a=o.properties)}else t=e;return[t,n,a]})(M(t)),r=o[0],i=o[1],s=o[2],l=n?e:e?.[r];return i?Q(l,s):l};class Ie extends X{data;constructor(e,t,n={}){super(e,n),this.template=t,this.data=n.data}_getExport(e){return this.setExportData=e,this.exportObj}render(e,t,n,a="static"){const o=H(this.data);if(void 0===this.selector||o)V(o?"Data error":"Property 'selector' is required");else{const o=()=>{const e=this._dynamic.data.data.components.map((e=>e.nodes)).flat();for(const t of e)this._dynamic.dynamicNodes.push(t)},r=e=>{const t={data:{},functions:{}};for(const[n,a]of Object.entries(e))if("data"===n)t.data=P(e.data);else for(const[e,n]of Object.entries(a))t.functions[e]=[...n];return t},s=(e,t,n,a)=>{let o=a&&void 0!==n?{...n}:{...this.data};return t?o=(0,this.data)({importedData:e,currentData:n}):o?e&&(o=((e,t)=>{const n=e;if(o=t,"object"!=typeof(a=n)||Array.isArray(a)||null===a||"object"!=typeof o||Array.isArray(o)||null===o)V("Export data is object");else for(const[e,a]of Object.entries(t))n[e],n[e]=a;var a,o;return n})(o,e)):("ImportData replacing data",console.warn("ImportData replacing data"),o=e),o},c=(e,t,n)=>{const a={value:s(t,n),id:e},o=this._dynamic.data.data.values.length;return this._dynamic.data.data.values.push(a),this._dynamic.data.data.values[o]},p=()=>{o(),this._dynamic.dynamicNodes.forEach((e=>{const t=R(this._dynamic.data.data.values,e.dataId);for(const n of e.values)n.render(t,void 0,void 0,n)})),this._dynamic.dynamicNodes=[]},d=(e,t,n,a)=>{const o=()=>{try{p()}catch(e){this._dynamic.dynamicNodes=[],V("Error: Maximum render")}G(v,n,this.dataFunctions,a,!1)};if(void 0!==n){const a=this._dynamic.data.data.values.filter((e=>e?.id===n));if(a&&a[0]){const n=this._dynamic.data.data.values.indexOf(a[0]);if(n>-1){const a=this._dynamic.data.data.values[n],r=this._dynamic.data.data.values[n].value;if(H(a)&&r.hasOwnProperty(t)){r[t]=e,o();const a=y(n);h(a,n);const i=a.exportData;if(this.setExportData&&i)for(const[e,t]of Object.entries(i))this.setExportData(e,t,this.exportId,n)}}}}else this.data&&t&&this.data[t]&&(this.data[t]=e,o())},h=(e,t)=>{const{exportObject:n,dataFunctions:a}=e,o=n?.data,r=n?.constructor,i=n?.indexesData,s={};if(o&&r)for(const[e]of Object.entries(o))if(r?.hasOwnProperty(e)){const n=m({...r[e]},i?.[e],t,a);s[e]=n}else V("Export data render error");e.exportData=s},m=(e,t,n,a)=>{const o=r(e),i=e=>Oe(R(this._dynamic.data.data.values,n),e);for(const[e,n]of Object.entries(o))if("data"===e||"functions"===e)for(const[r,s]of Object.entries(n))if(Array.isArray(s))for(let n=0;n<s.length;n++){const l=s[n];if("data"===e){const a=t?.[e][r]&&t[e][r].indexOf(n)>-1;o[e][r][n]=a?i(l):l}else o[e][r][n]=je(a,l)}else V("Data error");return o},u=e=>{const t=y(e),n=t.dataFunctions,a=t.exportObject,o=a?.indexesData;let r,i={};const s=(e,t)=>{const n={data:{},functions:{}};Object.entries(e).forEach((([e,t])=>{"data"!==e&&"functions"!==e||Object.entries(t).forEach((([t,a])=>{n[e][t]=[...a]}))})),i.hasOwnProperty(t)?i[t]=n:i[t]={data:{},functions:{}},i[t]=n},l=this.export?.data;if(l&&!a){const e=l;Object.entries(e).forEach((([t,n])=>{Object.entries(n).forEach((([n,a])=>{e[t][n]=[a]}))})),r=e}else if(!l&&a){const t=a.data;t?(Object.entries(t).forEach((([a,r])=>{s({...r},a),t[a]=m({...r},o?.[a],e,n)})),r=t):r=void 0}else if(l&&a){const t=l;Object.entries(t).forEach((([r,i])=>{a.data[r]&&(s(a.data[r],r),t[r]=((e,t)=>{const n=e;return Object.entries(t).forEach((([e,t])=>{n.data.hasOwnProperty(e)||(n.data[e]=t)})),n})(m({...a.data[r]},o?.[r],e,n),i))})),a.data&&Object.entries(a.data).forEach((([a,r])=>{t.hasOwnProperty(a)||(s({...r},a),t[a]=m({...r},o?.[a],e,n))})),r=t}else i=void 0,r=void 0;if(y(e).exportData=r,a&&i&&(a.constructor=i),r)if(0===e){const e={};Object.entries(r).forEach((([t,n])=>{e[t]=[n]})),this.exportObj=e}else this.exportObj&&Object.entries(r).forEach((([e,t])=>{this.exportObj&&this.exportObj.hasOwnProperty(e)&&this.exportObj[e].push(t)}));else this.exportObj=r},y=e=>this._dynamic.data.data.components.filter((t=>t?.id===e))[0],b=(e,t)=>{const n=this._dynamic.data.data.values.filter((t=>t?.id===e));return n.length>1&&V("id is unique"),void 0!==e?n&&n[0]&&n[0].value?n[0].value[t]:void 0:this.data&&this.data[t]?this.data[t]:void 0},v=(e,t,n,a,o=!1)=>{const r=(e=b(n,t))=>e,i=y(a);i.dataFunctions.hasOwnProperty(e)&&o?V("Function name is unique"):i.dataFunctions[e]=(e=r)=>{d("function"==typeof e?e(b(n,t)):e,t,n,a)}},T=(e,t,n,a)=>{if(void 0!==this.script){const o=y(a),r=R(this._dynamic.data.data.values,a,!0);Array.isArray(this.script)?(this.script[1].start===t||void 0===this.script[1].start&&"afterLoad"===t)&&J(e,r,this.script,o?.dataFunctions,n):"afterLoad"===t&&J(e,r,this.script,o?.dataFunctions,n)}var o,r;void 0!==this.attributes&&(o=e,r=this.attributes,null!=o&&r&&Object.keys(r).forEach((e=>{o.setAttribute(e,r[e])})))},x=e=>this.exportDataObjects.length>0&&this.exportDataObjects[e]?this.exportDataObjects[e]:void 0,w=(e,t)=>{const n=((e,t,n)=>({id:e,dataFunctions:{},functions:{},nodes:[],exportData:void 0,import:n,exportObject:t}))(e,x(e),t);return this._dynamic.data.data.components.push(n),n},k=(e,t,n,a)=>{const o={};e.hasOwnProperty("data")&&(o.data=[]),e.hasOwnProperty("functions")&&(o.functions=[]),Object.entries(e).forEach((([e,t])=>{"data"!==e&&"functions"!==e||Object.entries(t).forEach((([t,a])=>{if(n&&n[e]&&n[e].hasOwnProperty(t)&&n[e][t]){const a=JSON.stringify([t,Array.isArray(n[e][t])?n[e][t][0]:n[e][t]]);o[e]?.push(a)}else o[e]?.push(t)}))}));const r={};Object.entries(o).forEach((([e,t])=>{r[e]=t.join(";")}));const i={import:JSON.stringify(r),exportId:this.exportId,index:t,importIndex:a};return JSON.stringify(i)},D=(e,t,n)=>{const a=e;return Object.entries(a).forEach((([e,o])=>{"data"===e||"functions"===e?Object.entries(o).forEach((([o,r])=>{const i=a[e][o].length;t[e]?.hasOwnProperty(o)?(a[e][o].push(t[e]?.[o]),n&&(n[e][o]=i)):(a[e][o].push(void 0),n&&"data"===e&&(n[e][o]=[i]))})):V("Template data contains data or functions properties")})),Object.entries(t).forEach((([e,t])=>{"data"===e||"functions"===e?Object.entries(t).forEach((([t,o])=>{a[e].hasOwnProperty(t)||(a[e][t]=[o],n&&(n[e][t]=0))})):V("Template data contains data or functions properties")})),a},E=(e,t,n,a)=>{if(t.hasOwnProperty(e)){const o=t;return o[e]=D(t[e],n,a),o}{const o=t;return o[e]={data:{},functions:{}},Object.entries(n).forEach((([t,n])=>{"data"===t||"functions"===t?Object.entries(n).forEach((([n,r])=>{o[e][t][n]=[r],a[t][n]=0})):V("Template data contains data or functions properties")})),o}},j=(e,t,n)=>{const a=e;return a.hasOwnProperty(t)?Object.entries(n).forEach((([e,n])=>{"data"===e||"functions"===e?Object.entries(n).forEach((([n,o])=>{a[t][e][n]?a[t][e][n].push(o):a[t][e][n]=[o]})):V("Template data contains data or functions properties")})):(a[t]={data:{},functions:{}},Object.entries(n).forEach((([e,n])=>{"data"===e||"functions"===e?Object.entries(n).forEach((([n,o])=>{a[t][e][n]=[o]})):V("Template data contains data or functions properties")}))),a},O=(e,t,n,a)=>{let o={},r={};t&&n&&a&&(o=E(t,{...o},n,a),r=j(r,t,a));const i={data:o,index:e,indexesData:r,constructor:{}};this.exportDataObjects.push(i)},I=(e,t)=>{const n=R(this._dynamic.data.data.values,t);return Oe(n,e)},A=(e,t,n)=>{const a=R(this._dynamic.data.data.values,e,!1),o=s(t,n,a?.value,!0);a||V("Render error");const r=this._dynamic.data.data.values.indexOf(a);this._dynamic.data.data.values[r].value=o},C=(e,t,n,a)=>a&&Object.keys(a).length&&e in a?a[e]:(()=>{const n=R(this._dynamic.data.data.values,t);return Oe(n,e)})(),N=(e,t,n)=>{A(e,t,n);try{p()}catch(e){V(`${e}`)}},L=e&&void 0===this.trimHTML||this.trimHTML;"dynamic"===a?this._dynamic.data.data.components.forEach((e=>{const n=e.id;void 0===n&&V("Index error");const a=e.import,o=void 0!==a?.importIndex?a.importIndex:0,r=$(null,t,a,o),i=this.data&&K(this.data);N(n,r,i)})):document.querySelectorAll(`template[data-cample=${this.selector}]`).forEach(((e,a)=>{const o=z(e,this.import);this.importId=((e,t)=>{if(e){if(e.hasAttribute("data-cample-import")){let n=e.getAttribute("data-cample-import");if(n){n=n.replace(i,"");const e=JSON.parse(n);return e&&e.exportId?e.exportId:t}return t}if(t)return t}return 0})(e,n);const r=$(e,t),s=this.data&&K(this.data);T(e,"beforeLoad",r,a);const p=[];p.push((e=>T(e,"afterLoad",r,a)));const d=this._dynamic.data.data.currentId,h=c(d,r,s)?.value,m=w(a,o),{obj:y}=he([ue,ye,fe,me,ge,be,ve,xe,we,ke,De,Ee],this.template,a,d,this.values,L,I,C,(()=>G(v,this._dynamic.data.data.currentId,this.dataFunctions,a,!0)),(()=>((e,t,n,a=!1)=>{for(const o in n)a&&t.hasOwnProperty(o)&&V("Function cannot be called the same as functionName"),e[o]=je(t,n[o])})(m.functions,m.dataFunctions,this.functions)),m.functions),b={getExportObject:x,renderExportObject:E,createExportObject:O,renderIndexesValue:j,renderImportString:k},{el:D,currentNode:A}=((e,t,n,a,o,r,i,s,l,c)=>{const{nodes:p,el:d,render:h}=o,m=f.call(d,!0),u=p.length,y=[];g.call(y,m);const b=[];void 0!==h&&h.call(m,b,e,t,r,i,s,l,c);for(let n=0;n<u;n++){const a=p[n],{render:o,rootId:d}=a;g.call(y,o.call(y[d],b,e,t,r,i,s,l,c))}return{el:m,currentNode:{index:n,values:b,dataId:a,el:m,key:s}}})(te,h,a,d,y,void 0,void 0,void 0,b,this.export);A&&m.nodes.push(A),D?(m.exportObject=x(d),this._dynamic.data.data.currentId+=1):G(v,void 0,this.dataFunctions,a,!0),((e,t,n,a)=>{if(e instanceof HTMLTemplateElement){const o=e.content;t&&o&&l.call(e.content,t);const r=e.parentNode;if(o.childNodes.length>0){if(r)if(1===o.childNodes.length)if(o.childNodes[0].nodeType===Node.ELEMENT_NODE&&o.firstElementChild){r.insertBefore(o.firstElementChild,e);const t=e.previousElementSibling;r.removeChild(e),n.forEach(((e,n)=>e(t)))}else V("Component include only one node with type 'Element'");else V("Component include only one node with type 'Element'")}else switch(r&&r.removeChild(e),a){case"component":n[0](null);break;case"each":const t=e.previousSibling,a=e.nextSibling;r&&r.removeChild(e),n.forEach(((e,n)=>{0===n?e(r,t,a):e(null)}))}}else V("Element instanceof HTMLTemplateElement")})(e,D,p,"component"),u(a)}))}}}var Ae=n(370),Ce=n.n(Ae),Ne=new URL(n(525),n.b),Le=new URL(n(631),n.b),_e=Ce()(Ne),Fe=Ce()(Le);const Me=e=>{for(let t=0;t<e.length;t++)e[t].classList.add("active-link")},Ve=new Ie("header-component",'<header id="header"> <div class="block"> <div class="header-block"> <div class="sidebar-button hidden-button active-button"> <img src="'+_e+'" alt="sidebar"/> </div> <div class="logo"> <a href="/"> <img class="logo-image" src="'+Fe+'" alt="logo"/> </a> </div> <ul class="menu"> <li class="menu-item"><a class="menu-link" href="/">Main page</a></li> <li class="menu-item"> <a class="menu-link" href="../documentation/introduction.html">Documentation</a> </li> <li class="menu-item"> <a class="menu-link" href="../examples.html">Examples</a> </li> <li class="menu-item"> <div class="divider"></div> <a class="social-media github-link" target="_blank" href="https://github.com/Camplejs/Cample.js"> <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" alt="github"> <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path> </svg> </a> <a class="social-media" target="_blank" href="https://twitter.com/Camplejs"> <svg width="35" height="32" viewBox="0 0 35 32" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M26.897 0H32.3288L20.4026 13.5793L34.3362 32H23.4018L14.841 20.8059L5.04022 32H-0.391519L12.2432 17.476L-1.10001 0H10.1059L17.8402 10.2258L26.897 0ZM24.9959 28.8118H28.007L8.52361 3.07011H5.28819L24.9959 28.8118Z" fill="black"/> </svg> </a> </li> </ul> <div class="header-button active-button"> <img src="'+_e+'" alt="header"/> </div> </div> </div> <div class="header-block-mobile"> <div class="close"></div> <ul class="menu-mobile"> <li class="menu-item"><a class="menu-link" href="/">Main page</a></li> <li class="menu-item"> <a class="menu-link" href="../documentation/introduction.html">Documentation</a> </li> <li class="menu-item"> <a class="menu-link" href="../examples.html">Examples</a> </li> <li class="menu-item"> <a class="github-link" target="_blank" href="https://github.com/Camplejs/Cample.js"> <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true"> <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path> </svg> </a> <a class="social-media" target="_blank" href="https://twitter.com/Camplejs"> <svg width="35" height="32" viewBox="0 0 35 32" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M26.897 0H32.3288L20.4026 13.5793L34.3362 32H23.4018L14.841 20.8059L5.04022 32H-0.391519L12.2432 17.476L-1.10001 0H10.1059L17.8402 10.2258L26.897 0ZM24.9959 28.8118H28.007L8.52361 3.07011H5.28819L24.9959 28.8118Z" fill="black"/> </svg> </a> </li> </ul> </div> </header> ',{script:e=>{let{element:t}=e;const n=t.querySelector(".header-button"),a=t.querySelector(".header-block-mobile"),o=t.querySelector(".close");n.addEventListener("click",(()=>{n.classList.contains("active-button")?(n.classList.remove("active-button"),a.classList.add("active-header")):(n.classList.add("active-button"),a.classList.remove("active-header"))})),o.addEventListener("click",(()=>{n.classList.add("active-button"),a.classList.remove("active-header")}));const r=window.location.pathname.slice(1),i=t.querySelectorAll(".menu-link");if(r.includes("documentation")){const e=[i[1],i[4]];Me(e)}if(r.includes("examples")){const e=[i[2],i[5]];Me(e)}if(""===r){const e=[i[0],i[3]];Me(e)}}}),Se=new Ie("footer-component",'<footer class="footer"> <div class="block"> <div class="info"> <div class="year_and_description"> Made using the <a href="https://www.npmjs.com/package/cample" target="_blank" rel="noopener noreferrer">Cample.js</a> framework. </div> <div class="copyright"> Framework licensed under <a href="https://github.com/Camplejs/Cample.js/blob/main/LICENSE">MIT License</a>. </div> <div class="date">Copyright © 2022-{{year}}</div> </div> </div> </footer> ',{data:()=>({year:(new Date).getFullYear()})});var He=new URL(n(278),n.b),Pe=new URL(n(142),n.b),Ke=new URL(n(428),n.b),Be=new URL(n(91),n.b),Re=new URL(n(559),n.b),qe=new URL(n(882),n.b);const Ue=new Ie("content-component",'<div class="main_content"> <div class="introduction"> <div class="block"> <div class="introduction-content display-block"> <div class="first-block"> <h1 class="main-title"> Cample.js - fast modern javascript framework. </h1> <p class="subtitle"> Functional tool that runs on reactivity <br/> without a virtual DOM! </p> <div class="buttons"> <template data-cample-import="{{{buttonData1}}}" data-cample="button-component"></template> <template data-cample-import="{{{buttonData2}}}" data-cample="button-component"></template> </div> </div> <div class="second-block"> <img class="introduction-img" src="'+Ce()(He)+'" alt="logo"/> </div> </div> </div> </div> <div class="content-block about"> <div class="block"> <h2 class="title about-title"> Why is the alpha version of Cample.js interesting for development </h2> <div class="features"> <div class="feature"> <div class="feature-wrapper-img"> <img class="feature-img" src="'+Ce()(Pe)+'" alt="feature1"/> </div> <h3 class="feature-title">Fast</h3> <p class="feature-text"> The framework creates HTML on the site <a href="https://krausest.github.io/js-framework-benchmark/current.html" target="_blank" rel="noopener noreferrer">quite quickly</a> </p> </div> <div class="feature"> <div class="feature-wrapper-img"> <img class="feature-img" src="'+Ce()(Ke)+'" alt="feature1"/> </div> <h3 class="feature-title">Easy to coding</h3> <p class="feature-text"> Syntax consists of instantiating objects, allowing easy and flexible creation of components </p> </div> <div class="feature"> <div class="feature-wrapper-img"> <img class="feature-img" src="'+Ce()(Be)+'" alt="feature1"/> </div> <h3 class="feature-title">Functional</h3> <p class="feature-text"> Has a large amount of functionality necessary to create a complex website </p> </div> </div> </div> </div> <div class="content-block code"> <div class="block"> <h2 class="title code-title"> An example of how framework works (sometimes the code from a codepen does not load. Need to reload the page) </h2> <p class="codepen" data-height="500" data-theme-id="light" data-default-tab="js,result" data-slug-hash="rNrVjmp" data-editable="true" data-user="Camplejs" style="height:500px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/rNrVjmp"> Reactivity</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> <div class="content-block typescript"> <div class="block"> <div class="typescript-content"> <img class="typescript-image" src="'+Ce()(Re)+'" alt="typescript"/> <p class="code-text"> The framework is typed. In a development environment using typescript, there is no need to download additional modules for it. </p> </div> </div> </div> <div class="content-block documentation"> <div class="block"> <div class="documentation-content display-block"> <div class="first-block"> <h2 class="documentation-title"> Also, more details about the framework are written in the documentation, which is constantly updated. </h2> <div class="documentation-button"> <template data-cample-import="{{{buttonData3}}}" data-cample="button-component"></template> </div> </div> <div class="second-block"> <img class="documentation-img" src="'+Ce()(qe)+'" alt="documentation"/> </div> </div> </div> </div> <div class="content-block npm"> <div class="block"> <h2 class="title npm-title">Try Cample.js</h2> <p class="npm-subtitle subtitle center"> The framework is available in the node package manager and has its own cli for installing the application </p> <code class="npm-code"><span class="terminal">&gt;</span>npx cample-start</code> </div> </div> </div> ',{data:()=>({button1:"Get started",button2:"Examples",button3:"Documentation",link1:"/documentation/getting-started.html",link2:"/examples.html",link3:"/documentation/introduction.html"}),export:{buttonData1:{data:{text:"button1",link:"link1"}},buttonData2:{data:{text:"button2",link:"link2"}},buttonData3:{data:{text:"button3",link:"link3"}}},exportId:"contentId"}),Je=new Ie("documentation-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Documentation</h1> <hr class="section_line"> <h2>About:</h2> <p>Cample.js framework documentation.</p> <h2>Articles:</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/introduction.html">Introduction</a> </li> <li class="list_item"> <a href="/documentation/installation.html">Installation</a> </li> <li class="list_item"> <a href="/documentation/getting-started.html">Getting started</a> </li> </ul> </div> </div> '),Ge=new Ie("examples-component",'<div id="examples_main"> <template data-cample="sidebar-component"></template> <div class="example_page"> <h1 class="title">Main</h1> <p class="codepen" data-height="700px" data-theme-id="light" data-default-tab="js,result" data-slug-hash="WNgOGVb" data-editable="true" data-user="Camplejs" style="height:700px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/WNgOGVb"> Example Cample.js</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> '),$e=new Ie("sidebar-component",'<div class="sidebar-component"> <aside class="sidebar"> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/introduction.html">Introduction</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/installation.html">Installation</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/getting-started.html">Getting started</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/cample.html">Cample</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/component.html">Component</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/each.html">Each</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/reactivity.html">Reactivity</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/types.html">Types</a> </section> </aside> <aside class="sidebar-mobile"> <div class="close"></div> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/introduction.html">Introduction</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/installation.html">Installation</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/getting-started.html">Getting started</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/cample.html">Cample</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/component.html">Component</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/each.html">Each</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/reactivity.html">Reactivity</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/documentation/types.html">Types</a> </section> </aside> </div> ',{script:e=>{let{element:t}=e;const n=document.querySelector(".sidebar-button"),a=t.querySelector(".sidebar-mobile"),o=t.querySelector(".close");document.querySelector(".logo").classList.add("left-auto"),n.classList.remove("hidden-button"),n.addEventListener("click",(()=>{n.classList.contains("active-button")?(n.classList.remove("active-button"),a.classList.add("active-sidebar")):(n.classList.add("active-button"),a.classList.remove("active-sidebar"))})),o.addEventListener("click",(()=>{n.classList.add("active-button"),a.classList.remove("active-sidebar")}));const r=t.querySelectorAll(".sidebar-link");let i;switch(window.location.pathname.slice(1)){case"documentation/cample.html":i=[r[3],r[11]];break;case"documentation/installation.html":i=[r[1],r[9]];break;case"documentation/component.html":i=[r[4],r[12]];break;case"documentation/each.html":i=[r[5],r[13]];break;case"documentation/getting-started.html":i=[r[2],r[10]];break;case"documentation/introduction.html":i=[r[0],r[8]];break;case"documentation/types.html":i=[r[7],r[15]];break;case"documentation/reactivity.html":i=[r[6],r[14]]}Me(i)}}),ze=new Ie("sidebar-component",'<div class="sidebar-component"> <aside class="sidebar"> <section class="sidebar-section"> <a class="sidebar-link" href="/examples.html">Main</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/clicker.html">Clicker</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/tabs.html">Tabs</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/taskTracker.html">Task Tracker</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/dataTable.html">Data Table</a> </section> </aside> <aside class="sidebar-mobile"> <div class="close"></div> <section class="sidebar-section"> <a class="sidebar-link" href="/examples.html">Main</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/clicker.html">Clicker</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/tabs.html">Tabs</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/taskTracker.html">Task Tracker</a> </section> <section class="sidebar-section"> <a class="sidebar-link" href="/examples/dataTable.html">Data Table</a> </section> </aside> </div> ',{script:e=>{let{element:t}=e;const n=document.querySelector(".sidebar-button"),a=t.querySelector(".sidebar-mobile"),o=t.querySelector(".close");document.querySelector(".logo").classList.add("left-auto"),n.classList.remove("hidden-button"),n.addEventListener("click",(()=>{n.classList.contains("active-button")?(n.classList.remove("active-button"),a.classList.add("active-sidebar")):(n.classList.add("active-button"),a.classList.remove("active-sidebar"))})),o.addEventListener("click",(()=>{n.classList.add("active-button"),a.classList.remove("active-sidebar")}));const r=t.querySelectorAll(".sidebar-link");let i;switch(window.location.pathname.slice(1)){case"examples.html":i=[r[0],r[5]];break;case"examples/clicker.html":i=[r[1],r[6]];break;case"examples/tabs.html":i=[r[2],r[7]];break;case"examples/taskTracker.html":i=[r[3],r[8]];break;case"examples/dataTable.html":i=[r[4],r[9]]}Me(i)}}),We=new Ie("installation-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Installation</h1> <hr class="section_line"> <h2>Installation using npx:</h2> <p><a href="https://nodejs.org" target="_blank" rel="noopener noreferrer">Node.js</a> installation required. It is used to access npm and npx in the terminal.</p> <p>To create an application, it is better to use the official <code class="inline-code">cample-start</code> command to generate a “starting point”, choosing from two currently available templates.</p> <code> npx cample-start </code> <p>The main two templates are based on two module bundlers such as <a href="https://webpack.js.org" target="_blank" rel="noopener noreferrer">Webpack</a> and <a href="https://parceljs.org" target="_blank" rel="noopener noreferrer">Parcel</a>. To select one of them from the list in the terminal, you can select the most suitable one. All of them have official support.</p> <pre><code>Project template:\nwebpack-app\nparcel-app</code></pre> <p>After selecting a template, there is an option to create a name for the project.</p> <pre><code>Project name:new-app</code></pre> <p>The name may include "-" and "_" characters.</p> <p>Afterwards, the process of installing the necessary files should begin in a folder with the name that you typed. If the installation was successful, the following message should appear:</p> <code>Project ${projectName} installed successfully!</code> <p>To subsequently install the application, enter the following command while in the project folder:</p> <code>npm install</code> <p>Also, any other package manager can be selected for such an installation. The "node_modules" folder is not automatically generated when installing the application via npx.</p> <h2>Installation using npm:</h2> <p>For this installation the following command is assumed:</p> <code>npm i cample</code> <p>With this installation, functions will still be available directly from the module. Installation using <code class="inline-code">cample-start</code> simply specifies the start files for the application.</p> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/getting-started.html">Getting started</a> </li> </ul> </div> </div>'),Ye=new Ie("cample-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Cample</h1> <hr class="section_line"> <h2>About</h2> <p>The Cample object is the starting point for the application. A new instance of the object is initialized in an HTML block, renders the components.</p> <p>The application is rendered once. After this, it is updated by changing the data.</p> <h2>Class function</h2> <pre><code>const newCample = cample("#page",{\n  trimHTML:false\n});</code></pre> <h2>Render method</h2> <p>In cample.js, rendering is done by creating a template, which contains the "data-cample" key attribute. This attribute is passed the value of the selector that was specified when the component was created. The selector in the component always comes as the first argument. Render example:</p> <h3>before render</h3> <pre><code>&lt;template data-cample="new-component"&gt;&lt;/template&gt;</code></pre> <h3>after render</h3> <pre><code>&lt;div&gt;text&lt;div&gt;</code></pre> <h3>component</h3> <pre><code>const newComponent = component("new-component", "&lt;div&gt;text&lt;div&gt;");</code></pre> <p>If there was no "template" in the document that would contain the required "data-cample", then the component will not be rendered.</p> <h2>Arguments</h2> <h3>selector</h3> <p>The HTML block in which the page will be rendered is initialized mainly due to the selector argument, which receives the value of the specified block. An example of a selector:</p> <h4>JavaScript file</h4> <pre><code>new Cample("#page",{\n    trimHTML:false\n})\n.render("&lt;span&gt;text/&lt;span&gt;",{})</code></pre> <h4>HTML file</h4> <pre><code>&lt;main id="page"&gt;\n    text\n&lt;main&gt;</code></pre> <p>In this example, for the "main" HTML tag with a unique identifier "page", the text that was received in the "render" method is rendered.</p> <h3>options</h3> <p>The options object describes the property for applying the trim method to the rendered HTML.</p> <h4>trimHTML</h4> <p>Depending on the value of the trimHTML property, the javascript trim() method is applied to the HTML string.</p> <pre><code>new Cample("#page",{\n  trimHTML:false\n})</code></pre> <p>This will avoid the errors associated with rendering a single Element in the component, but also the HTML may not be displayed correctly.</p> <h2>Methods</h2> <p>The Cample object has one function render.</p> <h3>render</h3> <p>The render function renders components such as <a href="/documentation/component.html">Component</a>, <a href="/documentation/each.html">Each</a>, etc. The function\'s arguments are template and options. Template is HTML markup with string interpolation, and options is an object of components processed by the render function. An example of arguments in a function:</p> <pre><code>(`&lt;div&gt;\n    &lbrace; &lbrace;component&rbrace; &rbrace;\n&lt;/div&gt;`,{\n    component:newComponent\n})</code></pre> <p>In this example, for the variable newComponent (let\'s say that stores the component <a href="/documentation/component.html">Component</a>), in the options object, the name component is given, which can be processed using interpolation in the template.</p> <h2>Example code</h2> <pre><code>const newCample = new Cample("#page",{\n  trimHTML:false,\n});\nconst newComponent\n= component("new-component", "HTML");  \n\nnewCample.render("&lbrace; &lbrace;newComponent&rbrace; &rbrace;", {newComponent});</code></pre> <h2>Cample table</h2> <table> <thead> <tr> <th colspan="3">Arguments</th> </tr> <tr> <th>Name</th> <th>Usage</th> <th>Type</th> </tr> </thead> <tbody> <tr> <td>selector</td> <td>HTML selector, where components are rendered.</td> <td>SelectorType</td> </tr> <tr> <td>options</td> <td>Object options.</td> <td>CampleOptionsType</td> </tr> </tbody> <thead> <tr> <th colspan="3">Methods:</th> </tr> <tr> <th>Name</th> <th>Usage</th> <th>Returns</th> </tr> </thead> <tbody> <tr> <td>render</td> <td>Renders components such as a <a href="/documentation/component.html">Component</a>, for example.</td> <td>void</td> </tr> </tbody> </table> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/component.html">Component</a> </li> <li class="list_item"> <a href="/documentation/each.html">Each</a> </li> </ul> </div> </div> '),Xe=new Ie("component-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Component</h1> <hr class="section_line"> <h2>About</h2> <p>Component - the main concept of the framework. Almost the entire structure built using the framework is based on a component approach.</p> <p>The Component itself is a specific fragment of the site, be it a button, a list, or a text block, etc.</p> <h2>Class function</h2> <pre><code>const newComponent = component("new-component", "HTML");</code></pre> <h2>Arguments</h2> <p>The Component includes three arguments, the first of which is the value of the "data-cample" attribute (selector), the second is an HTML template containing string interpolation, and the third is a settings object.</p> <h3>selector</h3> <p>The selector is the value of the "data-cample" attribute of the template in which the component will be rendered. For example, if the selector is set to "new-selector", then the HTML "template" into which the component will be rendered will look like this:</p> <pre><code>&lt;template data-cample="new-selector"&gt;&lt;/template&gt;</code></pre> <p>It is worth noting that there can be as many "template" tags on a site as you like (within the memory of the machine where the site is located). That is, if there are 100 "templates" with the "new-component" attribute, then 100 components will be rendered.</p> <h3>template</h3> <p>A template is essentially a string that will be rendered in the "template" with attribute "data-cample". This string provides for string interpolation, which means replacing the content in double curly braces with the template corresponding to it in javascript HTML. An example of a template with string interpolation:</p> <pre><code>("new-component", \n`&lt;div class="component"&gt;\n    &lbrace; &lbrace;component_text&rbrace; &rbrace;\n&lt;/div&gt;`,\n{\n    data:()=>{\n        return {\n            component_text:"Text"\n        }\n    }\n})</code></pre> <p>Usually, the values for string interpolation in a template are located in the options object, and more specifically in the data function. Options object will be discussed in the next paragraph.</p> <h3>options</h3> <p>The options object describes the scripts, attributes, data, styles of the component, etc. Each of the listed properties describes a property of an object.</p> <h4>script</h4> <p>An array with two values is passed to the script object property, the first of which is a function that accepts the values of the component element, current data, as well as dynamic data functions and imported data and is triggered depending on the settings, and the second value is a script settings object that accepts one argument : "start". This argument takes three values: “beforeLoad”, “afterLoad” and undefined. This setting describes when the script function should be executed before or after the component is loaded. If the values are not defined, the function will be loaded after. Example script:</p> <pre><code>{\n    script: [\n        ({ element, functions, currentData, importedData }) => {\n        element.addEventListener("click", () => {\n            console.log(elements.component);\n        });\n        const updateFunction = (e) => {\n            functions?.updateText((data) => {\n                return "newText";\n            });\n        };\n        document.addEventListener("onload", updateFunction);\n            console.log(data);\n        },\n        {\n            start: "afterLoad",\n        },\n    ],\n    data: () => {\n        return {\n            dynamicText: "Text",\n        };\n    },\n    dataFunctions: {\n        updateText: "dynamicText",\n    },\n}</code></pre> <p>Also, the framework supports a script without an array. That is, a function can also be passed to a value.</p> <pre><code>{\n    script:({ element, functions, currentData, importedData })=>{\n        console.log("123");\n    }\n}</code></pre> <p>The function is running after loading by default.</p> <h4>attributes</h4> <p>The attributes property contains an object of the HTML attributes and their values that will be processed in the HTML "template". An example of the attributes:</p> <pre><code>("new-component", \n`text`,\n{\n    attributes:{\n        id:"id"\n    }\n})</code></pre> <p>In this example, the component with the "new-component" selector will be assigned an "id" attribute with the value id.</p> <h4>data</h4> <p>The data property contains a function that returns an object with properties that are processed in the template using string interpolation. These properties accept values with any data type. The function takes an object with imported data as arguments.</p> <pre><code>("new-component", \n`&lt;div class="component"&gt;\n    &lbrace; &lbrace;component_text&rbrace; &rbrace;\n    &lbrace; &lbrace;component_array_texts&rbrace; &rbrace;\n    &lbrace; &lbrace;dynamicData.value&rbrace; &rbrace;\n&lt;/div&gt;`,\n  {\n    data: ({ importedData }) => {\n      return {\n        component_text: "ComponentText",\n        component_array_texts: ["Text"],\n        dynamicData: {\n            value:"Data"\n        },\n      };\n    },\n  };\n);</code></pre> <p>All values are passed through the String() function before being assigned. Also, if the value is an object, then its properties can be accessed through a dot, as is done in vanilla js.</p> <h4>dataFunctions</h4> <p>The dataFunctions property is intended for creating data update functions. That is, this property accepts an object of type "function name": "the first data keyword without dots".</p> <pre><code>{\n    data: () => {\n        return {\n            component_text: "ComponentText",\n        };\n    },\n    dataFunctions:{\n        setComponentText:"component_text"\n    }\n}</code></pre> <p>These functions are passed in function arguments in a script property. More precisely, in the object in the “function” property. And also, they are available in the functions property.</p> <h4>functions</h4> <p>The functions property takes in an object of properties whose value is an array with the function and the name of the updating function from dataFunction, as in export in functions.</p> <pre><code>{\n    data: () => {\n        return {\n            component_text: "ComponentText",\n        };\n    },\n    dataFunctions:{\n        setComponentText:"component_text"\n    },\n    functions: {\n        updateComponentText: [\n          (setData) => (arguments) => {\n            setData(() => "123");\n          },\n          "setComponentText",\n        ],\n    }\n}</code></pre> <p>In the array, the first function will receive the data updating function from dataFunctions as the first argument, and all the arguments that were specified either in the template or in the script object will be passed to the second function. Using a closure, the second function will have access to both the arguments that were passed and the updating function.</p> <p>In template, a call to such a function will look like this:</p> <pre><code>&lt;div class="{ {component_text} }"&gt;\n    &lt;div id="{ {component_text} }"&gt;\n        &lt;div :click={ {updateComponentText(setComponentText)} } &gt;{ {setComponentText} }&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>As arguments in this form, the function takes only property names from the data property. All event names come from vanilla in javascript, as if the addEventListener method was applied to the element.</p> <h4>import</h4> <p>The import property sets the "data-cample-import" attribute. This attribute specifies data to import specific exported data. An example of the import:</p> <pre><code>import:{\n    value:["text"],\n    exportId:"textId"\n}</code></pre> <p>For example, if a component was given import data in other components, then the import object will overwrite them in the tag attribute.</p> <h5>value</h5> <p>The value property on the import object specifies a list of exported values that will be imported into the component. An example of the value:</p> <pre><code>{\n    value:["text", "text1"]\n}</code></pre> <p>In this example, two values are passed to the "data-cample-import" property: "text" and "text1".</p> <h5>exportId</h5> <p>In order to understand which component to import data from, the import object provides such a property as exportId. This property is set in the component that exports the data. It is set either in the options object. An example of the exportId:</p> <pre><code>{\n    exportId:"textId"\n}</code></pre> <p>In this example, the data will be imported from a component that will have its exportId set to "textId".</p> <h4>export</h4> <p>Thanks to the export property, you can send data and functions from the component. The value for this property is an object with properties that take the value of an object consisting of two properties - "data" and "functions". The data object contains the data from the "data" property, the functions object contains the data from the "functions" property.</p> <pre><code>{\n    data: ({ importedData }) => {\n        return {\n            component_text: "Text",\n        };\n    },\n    dataFunctions: {\n        updateText: "component_text",\n    },\n    export: {\n        dataToExport: {\n            data: {\n                text: "component_text",\n            },\n            functions: {\n                setText: [\n                    (setData) => (txt) => {\n                        setData(() => txt);\n                    },\n                    "updateText",\n                ],\n            },\n        },\n    }\n}</code></pre> <p>The data property of the "dataToExport" object specifies the name of the data from the properties of the "data" object and gives them a new key for export, the "functions" property in the same object specifies an array, the first argument of which is a function with a closure, and the second is the name of the exported function from "dataFunctions" object. In the first array argument, the argument of the first function is the data update function that was specified in the second array argument. The argument of the second function is the data that changes.</p> <p>In order to export data to a specific component, in addition to exportId, needed to "pass an object" to the value of the "data-cample-import" attribute of the desired component.</p> <pre><code>\n`&lt;div class="component"&gt;\n    &lt;template data-cample-import="{ { {dataToExport} } }"\n    data-cample="another-component"&gt;&lt;/template&gt;\n&lt;/div&gt;`</code></pre> <p>The property for the imported object can be different, in this example the property is the "dataToExport" property.</p> <h4>exportId</h4> <p>The exportId property specifies the export identifier, by which the component will "determine" where to get the data from. An example of the exportId:</p> <pre><code>{\n    exportId:"textId"\n}</code></pre> <p>In this example, to export specific data, "exportId" is set with the value "textId".</p> <h4>style</h4> <p>The style property contains a string that is inserted into the HTML style tag. This string is the stylesheet syntax, i.e. cascading style sheets syntax. An example of a style:</p> <pre><code>("new-component", \n`&lt;div class="component"&gt;\n    Text\n&lt;/div&gt;`,\n{\n    style:`\n        .component{\n            width:100px;\n            height:100px;\n        }\n    `\n});</code></pre> <p>Component styles are rendered in the style tag, thus it is possible to create styles in one component for another.</p> <h4>values</h4> <p>The values property takes the value of an object whose property has a value of an object that generates dynamic data depending on a condition.</p> <pre><code>values: {\n    selectedValue: {\n        "currentData.select === currentData.true":"selected",\n        "!(currentData.currentClass && currentData.false) == currentData.anotherProperty":["class1","{ {currentData.class2} }"]\n    },\n}</code></pre> <p>In this example, only the values from the data property are used in the conditions; in their values, you can write both regular text and text with string interpolation. If the value is a string, then if true, the value will be this string, and if false, then "". If the value is an array of two strings, then it works like a ternary operator, when if true is the first value, if false is the second value.</p> <b>**Also, it\'s worth noting that difficult conditions are still being tested! The code may produce other values of true or false! It is highly recommended to use simple conditions with one or more operators!**</b> <h5>HTML before</h5> <pre><code>&lt;div class="class { { [selectedValue] } }"&gt;\n    { { [selectedValue] } }\n&lt;/div&gt;</code></pre> <h5>HTML after</h5> <pre><code>&lt;div class="class selected class1"&gt;\n    selected\n&lt;/div&gt;</code></pre> <p>Also, it\'s worth noting that in string interpolation, values are "passed as an array". The key to the dynamic string in this example is the "selectedValue" value.</p> <h4>trimHTML</h4> <p>Depending on the value of the trimHTML property, the javascript trim() method is applied to the HTML string.</p> <pre><code>{\n  trimHTML:false\n}</code></pre> <p>This will avoid the errors associated with rendering a single Element in the component, but also the HTML may not be displayed correctly.</p> <h2>Example code</h2> <pre><code>new Component(\n"new-component",\n`&lt;div class="{ {[selected]} } component" :click={ {setText1(component_text)} }&gt;\n    &lbrace; &lbrace;component_text&rbrace; &rbrace;\n    &lbrace; &lbrace;dynamicData&rbrace; &rbrace;\n    &lt;template data-cample-import="{ { {exportData} } }"\n    data-cample="another-component"&gt;&lt;/template&gt;\n&lt;/div&gt;`,\n{\n    script: [\n    ({ element, functions }) =&gt; {\n        console.log(element);\n        const updateFunction = (e) =&gt; {\n        functions?.updateText((data) =&gt; {\n            return "newText";\n        });\n        };\n        document.addEventListener("onload", updateFunction);\n    },\n    {\n        start: "afterLoad",\n    },\n    ],\n    attributes: {\n        id: "id",\n    },\n    data: ({ importedData }) => {\n        return {\n            component_text: "Text",\n        };\n    },\n    style: `\n        .component{\n            width:100px;\n            height:100px;\n        }\n    `,\n    dataFunctions: {\n        updateText: "component_text",\n    },\n    functions: {\n        setText1: [\n            (setData) => (txt) => {\n                setData(() => txt);\n            },\n            "updateText",\n        ],\n    },\n    export: {\n        exportData: {\n            data: {\n                text: "component_text",\n            },\n            functions: {\n                setText: [\n                    (setData) => (txt) => {\n                        setData(() => txt);\n                    },\n                    "updateText",\n                ],\n            },\n        },\n    },\n    values: {\n        selected: {\n            "!!component_text": "selected"\n        },\n    },\n    exportId: "textId",\n    import: {\n        value: ["text1"],\n        exportId: "textId1",\n    },\n    trimHTML: false,\n}\n);</code></pre> <h2>Component table</h2> <table> <thead> <tr> <th colspan="3">Arguments</th> </tr> <tr> <th>Name</th> <th>Usage</th> <th>Type</th> </tr> </thead> <tbody> <tr> <td>selector</td> <td>The value of the "data-cample" property of the template tag into which the component will be rendered.</td> <td>SelectorType</td> </tr> <tr> <td>template</td> <td>HTML rendering template including string interpolation.</td> <td>string</td> </tr> <tr> <td>options</td> <td>Object options.</td> <td>ComponentOptionsType | undefined</td> </tr> </tbody> </table> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/cample.html">Cample</a> </li> </ul> </div> </div>'),Ze=new Ie("introduction-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Introduction</h1> <hr class="section_line"> <h2>About</h2> <p>Cample.js is an actively developed and maintained framework that supports many modern technology solutions for creating a website. The component-based approach, as well as reactivity without a virtual DOM and data export and import, will make building a site much faster than if the site was developed using js alone. Moreover, the framework is new and you can try it as something new when creating a website.</p> <p>Cample - combination of words component and example.</p> <p>Framework is quite fast in speed tests, which increases the speed of creating a user interface on the site.</p> <p>The development of the framework has been underway for more than a year. During this time, a lot of working functionality was implemented that will allow you to create websites with convenience.</p> <h2>Plans for the framework</h2> <p>The main plan of the framework for the near future is to bring development to the point where the framework is truly a full-fledged tool for production, because the tool is in alpha testing, which makes it not yet suitable for creating a website for production needs</p> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/installation.html">Installation</a> </li> <li class="list_item"> <a href="/documentation/getting-started.html">Getting started</a> </li> </ul> </div> </div> '),Qe=new Ie("types-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Types:</h1> <hr class="section_line"> <h2>About:</h2> <p>Types (types.d.ts) in a Cample.js.</p> <pre>\n        <code>type OptionsType = {\n  [key: string]: any;\n};\n\ntype CampleOptionsType = {\n  replaceTags?: boolean;\n  trimHTML?: boolean;\n};\n\ntype ImportType = Array&lt;string&gt;;\n\ntype BindType = Array&lt;string&gt;;\n\ntype TemplateType = string | undefined;\n\ntype IndexType = number;\n\ntype ImportObjectType = {\n  value: ImportType;\n  exportId?: ExportIdType;\n  isDynamic?: boolean;\n  importIndex?: IndexType;\n};\n\ntype ComponentType =\n  | string\n  | {\n      selector: string;\n      import?: ImportType | ImportObjectType;\n      bind?: BindType;\n    }\n  | undefined;\n\ntype ComponentsType = Array&lt;ComponentType&gt;;\n\ntype ImportObjectStringType = {\n  import: string;\n  exportId: ExportIdType | undefined;\n  index: IndexType;\n  importIndex?: IndexType;\n};\n\ntype ComponentsTernaryType = [ComponentType, ComponentType];\n\ntype ConditionType = boolean | undefined;\n\ntype SelectorType = string | undefined;\n\ntype StyleType = string | undefined;\n\ntype LengthType = number;\n\ntype RenderType = "default" | "dynamic";\n\ntype UpdatingSetType = Map&lt;any, any&gt;;\n\ntype FunctionsArray = Array&lt;any&gt;;\n\ntype RenderComponentType =\n  | "cycle"\n  | "component"\n  | "animation"\n  | "ternary"\n  | "addition"\n  | "if"\n  | "each";\n\ntype AttributesType = {\n  [key: string]: string;\n};\n\ntype DataAttributeType = {\n  selector: string;\n  value: string | undefined;\n};\n\ntype EachDataObjectType = {\n  [key: string]: any;\n};\ntype EachTemplateArgumentType = {\n  [key: string]: any;\n};\ntype EachTemplateFunction = (\n  argument?: EachTemplateArgumentType,\n  index?: number\n) =&gt; string;\n\ntype EachDataValueType = Array&lt;any&gt;;\n\ntype EachDataFunctionType = (\n  argument?: DataFunctionArgumentsType\n) =&gt; EachDataValueType;\n\ntype DataAttributesArrayType = Array&lt;DataAttributeType&gt;;\n\ntype AttrValueType = {\n  [key: string]: any;\n};\n\ntype AttributesValType = {\n  name?: string;\n  value?: string | [string, boolean];\n  keys?: {\n    [key: string]: CurrentKeyType;\n  };\n  oldValue?: string;\n};\ntype AttributesValObjType = {\n  id: IdType;\n  attrs: AttributesValType;\n};\ntype DynamicEl = Element | undefined;\ntype DynamicEls = Array&lt;Element&gt;;\ntype DynamicElement = {\n  el: DynamicEl;\n  els: DynamicEls;\n};\n\ntype DynamicTextType = {\n  key?: CurrentKeyType;\n  isProperty?: boolean;\n  texts?: Array&lt;Text | number&gt;;\n};\n\ntype DynamicTextArrayType = Array&lt;DynamicTextType&gt;;\n\ntype TextArrayType = Array&lt;Text&gt;;\n\ntype DynamicFunctionsType = {\n  [key: string]: (attribute?: any) =&gt; void;\n};\n\ntype DataComponentType = DataType | DataFunctionType | undefined;\n\ntype DynamicDataType = {\n  value: DataComponentType;\n  oldValue?: DataComponentType;\n  importData?: ImportDataType;\n  id: number;\n};\n\ntype DynamicEachDataType = {\n  value: EachDataValueType;\n  oldValue?: EachDataValueType;\n  importData?: ImportDataType;\n  id: number;\n};\n\ntype ElementIndexType = {\n  id: number;\n  path: Array&lt;number&gt;;\n};\ntype FunctionEventObjType = {\n  render?: FunctionEventType;\n};\n\ntype ValueValueType =\n  | FunctionEventObjType\n  | AttributesValType\n  | DynamicTextType\n  | CampleImportType\n  | ClassType;\ntype FunctionEventType = (...args: any[]) =&gt; any;\ntype FunctionsEventsType = Array&lt;FunctionEventType&gt;;\ntype EventType = {\n  id: IdType;\n  events: FunctionsEventsType;\n};\n\ntype EventsType = Array&lt;EventType&gt;;\n\ntype CampleImportType = {\n  value?: string;\n};\n\ntype ValueItemType = {\n  value: string | CurrentKeyType;\n  render: (...args: any[]) =&gt; string;\n};\n\ntype ValueItemsType = {\n  value: ValueItemType | Array&lt;ValueItemType&gt;;\n  render: (...args: any[]) =&gt; string;\n};\ntype OldClassListType = {\n  [key: string]: any;\n};\ntype ClassType = {\n  classes?: ValueItemsType;\n  old?: string;\n};\n\ntype RenderedKeyType = string | DynamicKeyObjectType | undefined;\n\ntype ValueType = {\n  id?: IdType | IndexObjNode;\n  type: number; //"event" | "dynamicText" | "attribute" | "import" | "class"\n} & FunctionEventObjType &\n  AttributesValType &\n  DynamicTextType &\n  CampleImportType &\n  ClassType;\ntype ValuesTemplateType = Array&lt;ValueType&gt;;\ntype NodeDOMType = {\n  id: number;\n  parentNode: NodeDOMType | null;\n  path: Array&lt;IndexObjNode&gt;;\n  nextNode: NodeDOMType | null;\n  siblings: Array&lt;NodeDOMType&gt;;\n};\ntype DynamicNodesObjectType = {\n  [key: string]: Array&lt;IndexObjNode&gt;;\n};\ntype RenderNodeFunctionType = (...args: any[]) =&gt; ChildNode | null;\ntype IndexObjNode = {\n  id?: number;\n  node?: NodeDOMType;\n  rootId: number;\n  render?: RenderNodeFunctionType;\n  dynamicNodes?: Array&lt;IndexObjNode&gt;;\n  isNext?: boolean;\n  isText?: boolean;\n};\ntype EachTemplateNodesType = Array&lt;IndexObjNode&gt;;\ntype EachTemplateType = {\n  el: Element | null;\n  key?: ValueItemsType;\n  nodes: EachTemplateNodesType;\n  values: ValuesTemplateType;\n};\n\ntype ElementsType = Element[];\ntype DynamicNodeComponentNodeType = ChildNode | null | undefined;\ntype DynamicNodeComponentParentNodeType = ParentNode | null | undefined;\ntype DynamicDataValueType = DataComponentType | EachDataValueType;\ntype EachDynamicNodeComponentType = {\n  import?: ImportObjectType;\n  parentNode: ParentNode;\n  template?: EachTemplateType;\n  keys?: ArrayStringType;\n  dataFunctions: FunctionsType;\n  functions: FunctionsType;\n  nodes: Array&lt;NodeType&gt;;\n  nodeNext: DynamicNodeComponentNodeType;\n  nodePrevious: DynamicNodeComponentNodeType;\n  id: number;\n};\ntype ImportDataType = {\n  [key: string]: any;\n};\ntype DataExportObjectDataType = {\n  [key: string]: ExportTemplateDataType;\n};\ntype DataIndexesValueType = {\n  [key: string]: Array&lt;number | [number]&gt;;\n};\n\ntype DataIndexesObjectType = {\n  data: DataIndexesValueType;\n  functions: DataIndexesValueType;\n};\n\ntype DataIndexesType = {\n  [key: string]: DataIndexesObjectType;\n};\n\ntype ExportObjectDataType = {\n  data: DataExportObjectDataType;\n  indexesData: DataIndexesType;\n  index: number;\n  constructor: DataExportObjectDataType;\n};\n\ntype ExportObjectDataArrayType = Array&lt;ExportObjectDataType&gt;;\n\ntype ComponentDynamicNodeComponentType = {\n  id: number;\n  dataFunctions: FunctionsType;\n  functions: FunctionsType;\n  exportData?: ExportDataType;\n  nodes: Array&lt;NodeType&gt;;\n  exportObject?: ExportObjectDataType;\n  import?: ImportObjectType;\n};\ntype ArrayAnyType = Array&lt;any&gt;;\n\ntype DataExportObjectType = {\n  [key: string]: ExportDataArrayType;\n};\n\ntype DynamicNodeComponentType =\n  | EachDynamicNodeComponentType\n  | ComponentDynamicNodeComponentType;\n\ntype LastNodeType = Element | ChildNode | ParentNode;\n\ntype ScriptArgumentsType = {\n  element: Element | null;\n  functions: FunctionsType | undefined;\n  currentData: DataType | undefined;\n  importedData?: DataType;\n};\n\ntype DynamicType = {\n  data: {\n    values: Array&lt;DynamicDataType | DynamicEachDataType&gt;;\n    components: Array&lt;DynamicNodeComponentType&gt;;\n    currentId: number;\n  };\n};\ntype ValuesArguments = {\n  [key: string]: any;\n};\ntype ValuesValueType = {\n  [key: string]: string | [string, string];\n};\ntype ValuesType = {\n  [key: string]: ValuesValueType;\n};\ntype ArgumentsArrayType = Array&lt;any&gt;;\n\ntype EventGetDataType = (\n  key: string,\n  dataId: number,\n  index?: IndexType\n) =&gt; any;\n\ntype EventEachGetDataType = (\n  key: string,\n  dataId: number,\n  keyEl: string | undefined,\n  index: number\n) =&gt; any;\n\ntype EventEachGetFunctionType = (\n  key: string,\n  dataId: number,\n  keyEl: string | undefined,\n  functions?: FunctionsType\n) =&gt; any;\n\ntype EventFunctionType = (...args: any[]) =&gt; any;\n\ntype ListenerValueType = {\n  value: EventKeyObjectType;\n  fn?: EventFunctionType;\n};\n\ntype ListenersType = {\n  [key: string]: ListenerValueType;\n};\ntype DynamicTextsObj = {\n  id: IdType;\n  dynamicTexts: DynamicTextArrayType;\n};\ntype DynamicTextsType = Array&lt;DynamicTextsObj&gt;;\ntype DynamicAttributesType = Array&lt;AttributesValObjType&gt;;\n\ntype OperandType = {\n  value: KeyValuesValueConditionType | CurrentKeyType;\n  priority?: number;\n  type?: number;\n  oldType?: number;\n  render: (...args: any[]) =&gt; any;\n};\ntype OperationType = {\n  value: number;\n  priority?: number;\n  render: (...args: any[]) =&gt; any;\n};\n\ntype ConnectingOperationType = {\n  priority: number;\n  value: OperationType | OperandType;\n};\ntype KeyValuesValueConditionType = {\n  operands: Array&lt;OperandType | OperationType | KeyValuesValueConditionType&gt;;\n  priority?: number;\n  oldBracketType?: number;\n  isFirstOperation?: boolean;\n  connectingOperations?: ConnectingOperationType[];\n  render?: (...args: any[]) =&gt; boolean;\n};\ntype RenderConditionType = (...args: any[]) =&gt; any;\ntype ValueKeyStringType = {\n  valueClass: {\n    value: ValueItemType | Array&lt;ValueItemType&gt;;\n    render: (...args: any[]) =&gt; void;\n  };\n};\n\ntype KeyValuesValueType = {\n  condition: KeyValuesValueConditionType;\n  values: ValueKeyStringType | [ValueKeyStringType, ValueKeyStringType];\n  render: (...args: any[]) =&gt; void;\n};\ntype KeyValuesType = KeyValuesValueType[];\ntype CurrentKeyType = {\n  originKey: string;\n  key: string;\n  properties?: Array&lt;string&gt;;\n  values?: KeyValuesType | KeyValuesValueType;\n  render?: (...args: any[]) =&gt; any;\n  isProperty?: boolean;\n  originType: number;\n  isClass?: boolean;\n  isValue: boolean;\n};\ntype NodeTextType = {\n  key: CurrentKeyType;\n  value: string;\n};\n\ntype NodeValueType = {\n  render: any;\n  type: number; // "dynamicText" | "attribute" | "class"\n} & AttributesValType &\n  NodeTextType &\n  ClassType;\ntype NodeValuesType = Array&lt;NodeValueType&gt;;\ntype NodeType = {\n  isNew?: boolean;\n  index: number;\n  key?: string;\n  el?: Node;\n  values: NodeValuesType;\n  dataId: number;\n};\n\ntype ArrayNodeType = Array&lt;NodeType&gt;;\n\ntype DynamicKeyObjectType = {\n  key: string;\n  properties: Array&lt;string&gt;;\n};\ntype DynamicKeyObjectArrayType = Array&lt;DynamicKeyObjectType&gt;;\n\ntype EventKeyObjectType = {\n  key: string;\n  arguments: ArgumentsArrayType;\n};\n\ntype EventKeyObjectArrayType = Array&lt;EventKeyObjectType&gt;;\n\ntype DynamicKeyType = string | DynamicKeyObjectType;\n\ntype DynamicKeyArrayType = Array&lt;DynamicKeyType&gt;;\n\ntype ArrayStringType = Array&lt;string&gt;;\n\ntype ElementType = {\n  selector: string;\n  id?: string;\n  class?: string;\n  attributes?: AttributesType;\n};\n\ntype FunctionsArrayType = [\n  (...args: any[]) =&gt; (...args: any[]) =&gt; any,\n  string\n];\ntype FunctionsObjType = {\n  [key: string]: string | FunctionsArrayType;\n};\n\ntype RootOptionsType = {\n  attributes?: AttributesType;\n  style?: StyleType;\n  replaceTag?: boolean;\n  replaceTags?: boolean;\n  trimHTML?: boolean;\n  export?: ExportDataType;\n  exportId?: ExportIdType;\n};\n\ntype DefaultOptionsType = RootOptionsType & {\n  element?: ElementType;\n};\n\ntype ComponentRenderType = "dynamic" | "static";\n\ntype DefaultDataOptionsType = RootOptionsType & {\n  import?: ImportObjectType;\n  script?: ScriptType;\n  values?: ValuesType;\n  dataFunctions?: FunctionsObjType;\n  functions?: FunctionsOptionType;\n};\ntype IndexValueDataType = {\n  [key: string]: number;\n};\ntype IndexValuFunctionsType = {\n  [key: string]: number;\n};\ntype IndexValuesType = {\n  data: IndexValueDataType;\n  functions: IndexValuFunctionsType;\n};\ntype ArrayExportTamplateStringType = Array&lt;string | undefined&gt;;\n\ntype ExportTemplateDataType = {\n  data: {\n    [key: string]: ArrayExportTamplateStringType;\n  };\n  functions: {\n    [key: string]: ExportTemplateFunctionArrayType;\n  };\n};\n\ntype ImportObjectArrayType = {\n  data?: ArrayStringType;\n  functions?: ArrayStringType;\n};\n\ntype ExportTemplateDataNewType = {\n  data: {\n    [key: string]: ArrayExportTamplateStringType | string;\n  };\n  functions: {\n    [key: string]: ExportTemplateFunctionArrayType;\n  };\n};\n\ntype ExportTemplateFunctionArrayType = Array&lt;\n  FunctionsOptionValueType | undefined\n&gt;;\n\ntype FunctionsOptionFunctionType = (...args: any[]) =&gt; void;\n\ntype FunctionsOptionValueType = [FunctionsOptionFunctionType, string];\n\ntype FunctionsOptionType = {\n  [key: string]: FunctionsOptionValueType;\n};\n\ntype ExportTemplateValueDataType = {\n  [key: string]: string | ArrayStringType;\n};\ntype TemplateExportValueType = {\n  data?: ExportTemplateValueDataType;\n  functions?: FunctionsOptionType;\n};\n\ntype ExportDynamicType = {\n  [key: string]: TemplateExportValueType;\n};\n\ntype IterationFunctionType = (...args: any[]) =&gt; void;\n\ntype EachOptionsType = DefaultDataOptionsType & {\n  functionName?: string;\n  valueName?: string;\n  importedDataName?: string;\n  componentData?: boolean;\n  indexName?: string;\n  iteration?: IterationFunctionType;\n};\n\ntype DataPropertyType = {\n  value?: any;\n};\n\ntype DataType = {\n  [key: string]: any | DataPropertyType;\n};\n\ntype StartType = "afterLoad" | "beforeLoad";\n\ntype ScriptOptionsType = {\n  start?: StartType;\n};\n\ntype ExportDataArrayType = Array&lt;ExportDataType | undefined&gt;;\n\ntype IdType = number | undefined;\n\ntype ScriptFunctionType = (...args: any[]) =&gt; void;\ntype CycleValueType = { value: string; index: string };\ntype ScriptType =\n  | [ScriptFunctionType, ScriptOptionsType]\n  | ScriptFunctionType;\n\ntype ExportDataValuesValueType = {\n  [key: string]: any;\n};\n\ntype ExportDataType = {\n  [key: string]: ExportDataValuesValueType;\n};\n\ntype ExportDataValueType = {\n  value: {\n    [key: string]: any;\n  };\n  components: Array&lt;any&gt;;\n};\n\ntype ExportCampleDataType = {\n  [key: string]: ExportDataValueType;\n};\ntype ComponentTemplateType = string | ComponentTemplateFunctionType;\ntype ComponentTemplateArgumentType = {\n  data: DataType | undefined;\n};\ntype ComponentTemplateFunctionType = (\n  argument?: ComponentTemplateArgumentType\n) =&gt; string;\n\ntype ExportFunctionDataOptionsType = {\n  data: DataType | undefined;\n};\n\ntype ExportFunctionDataType = (\n  arg: ExportFunctionDataOptionsType\n) =&gt; ExportDataType;\n\ntype ExportDynamicDataType = ExportFunctionDataType | ExportDataType;\n\ntype DataFunctionArgumentsType = {\n  importedData?: ExportDataType;\n  currentData?: DataType | EachDataValueType;\n};\n\ntype DataFunctionType = (\n  argument?: DataFunctionArgumentsType\n) =&gt; DataType;\n\ntype ComponentOptionsType = DefaultDataOptionsType & {\n  data?: DataType | DataFunctionType;\n};\n\ntype AnimationElementType = {\n  selector: string;\n  id?: string;\n  class?: string;\n  transition?: string;\n  attributes?: AttributesType;\n};\n\ntype ExportIdType = string | number;\n\ntype AnimationOptionsType = {\n  event: string;\n  reverseEvent?: string;\n  attributes?: AttributesType;\n  styleAnimation: string;\n  style?: string;\n  class: string;\n  transition?: string;\n  element?: AnimationElementType;\n  replaceTag?: boolean;\n  replaceTags?: boolean;\n  trimHTML?: boolean;\n  export?: ExportDataType;\n  exportId?: ExportIdType;\n};\n\ntype FunctionsType = {\n  [key: string]: any;\n};</code></pre> </div> </div>');var et=new URL(n(305),n.b);const tt=new Ie("getting-started-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Getting started</h1> <hr class="section_line"> <h2>Starting usage</h2> <p>After setting <a href="/documentation/installation.html">the starting point</a> of the application, the js file will contain the following code, or the same one, but with html import.</p> <h3>Javascript file</h3> <pre><code>const newComponent = component(\n    "new-component",\n    `&lt;div class="component"&gt;\n        &lt;div&gt; class="clicks" data-value="{ {dynamicData} }"&gt;Clicks:{ {dynamicData} }&lt;/div&gt;\n        &lt;button&gt; class="button"&gt;Click&lt;/button&gt;\n      &lt;/div&gt;`,\n    {\n      script: ({ element, functions }) =&gt; {\n        const button = element.querySelector(".button");\n        const updateFunction = () =&gt; {\n          functions?.updateClicks((data) =&gt; {\n            return data + 1;\n          });\n        };\n        button.addEventListener("click", updateFunction);\n      },\n      data: () =&gt; {\n        return {\n          dynamicData: 0,\n        };\n      },\n      dataFunctions: {\n        updateClicks: "dynamicData",\n      },\n    }\n  );\n  cample("#app", {\n    trimHTML: true,\n  }).render(\n    `\n    &lt;template&gt; data-cample="new-component"&gt;&lt;/template&gt;\n    `,\n    {\n        newComponent,\n    }\n);\n</code></pre> <h3>HTML file</h3> <pre><code>&lt;div id="app"&gt;&lt;/div&gt;</code></pre> <p>You can change this code to any other you want. This code is presented as an example of how the framework works.</p> <h2>Classes instance</h2> <p>In Cample.js, all components are created using "new" or "class function". The "class function" does the same thing as creating with "new".</p> <h3>new</h3> <pre><code>const newComponent \n= new Component(\n  string,\n  string,\n  object,\n  object\n);</code></pre> <h3>class function</h3> <pre><code>const newComponent \n= component(\n  string,\n  string,\n  object,\n  object\n);</code></pre> <p>The default framework uses two ways to create components. The more preferable of these is the method of creation through "class functions", since, in general, less code is obtained.</p> <h2>Importing files</h2> <p>Also, a big advantage of the syntax for creating components through creating an object instance is that when working with a component, you can import ready-made files into this syntax. For this purpose, there are HTML parsers that convert ready-made files into a line.</p> <h3>Files</h3> <img class="documentation-img" src="'+Ce()(et)+'" alt="files"> <h3>Code</h3> <pre><code>import templateButton from "button.html";\n\nconst newComponent \n= component(\n  "component",\n  templateButton\n);</code></pre> <p>It is also important that regular HTML markup is used. The syntax that complements it will not generate an error when parsing the string. All syntax works fine when creating components.</p> <h2>Examples project</h2> <ul class="list"> <li class="list_item"> <a href="/examples.html">Example #1</a> </li> <li class="list_item"> <a href="/examples/clicker.html">Example #2</a> </li> <li class="list_item"> <a href="/examples/taskTracker.html">Example #3</a> </li> </ul> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/installation.html">Installation</a> </li> <li class="list_item"> <a href="/documentation/cample.html">Cample</a> </li> </ul> </div> </div>'),nt=new Ie("button-component",'<a class="button {{[get_started]}}" href="{{link}}">{{text}}</a> ',{data:e=>({text:e?.importedData?.text,link:e?.importedData?.link,staticText:"Get started"}),import:{value:[],exportId:"contentId"},values:{get_started:{"text === staticText":"active"}}}),at=new Ie("note-component",'<div class="note"> <span class="note_span">New <a class="note_link" href="/documentation/introduction.html">documentation</a> for alpha version of the framework!</span> </div> ',{});var ot=new URL(n(684),n.b),rt=new URL(n(565),n.b);const it=new Ie("reactivity-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Reactivity</h1> <hr class="section_line"> <h2>About</h2> <p>Reactivity in the framework is understood as the ability, in response to data changes, to automatically update parts of the javascript code or HTML nodes that used this data.</p> <h3>Reactivity example</h3> <h4>Before string interpolation</h4> <pre><code>&lt;div class="&lbrace; &lbrace;component_text&rbrace; &rbrace;"&gt;\n    &lbrace; &lbrace;component_text&rbrace; &rbrace;\n&lt;/div&gt;</code></pre> <h4>After string interpolation <pre><code>&lt;div class="text"&gt;\n    text\n&lt;/div&gt;</code></pre> <h3>After updating data</h3> <pre><code>&lt;div class="text1"&gt;\n    text1\n&lt;/div&gt;</code></pre> <p>In this example, the DOM nodes seem to depend on the data that is updated in the data property in the components.</p> <p>This can also be shown in a diagram:</p> <img class="reactivity-image" src="'+Ce()(ot)+'" alt="reactivity"> <p>This diagram shows that data is updated when you use a function that updates it. That is, it is as if a single-threaded data update is being created. In future versions, the structure may change slightly due to the processing of asynchronous data.</p> <h2>With VDOM vs without VDOM</h2> <p>The main advantage of the virtual DOM is that it is a lightweight version of the real DOM, which can be manipulated and the real DOM can be updated only after the virtual DOM is ok. This lightness allows you to avoid updating the real DOM once again, which allows you to update the site relatively quickly.</p> <p>Frameworks with this technology are quite fast, if not the fastest. But the funny thing is that this layer still creates a barrier between the real DOM and the code, and also takes up memory with an essentially unnecessary object, which creates additional problems.</p> <p>In practice, working with a real DOM can also be comparable in speed to a virtual one.</p> <img src="'+Ce()(rt)+'" alt="results"> <p>This example examines the speed result of the beta version of Cample.js, which, of course, lags behind implementations with a virtual DOM in speed, but still the results are not so bad, which makes it possible to assume that this structure without a virtual DOM is quite possible</p> <h2>Example</h2> <pre><code>const newComponent = component(\n    "new-component",\n    `&lt;div class="component"&gt;\n        &lt;div&gt; class="clicks" data-value="{ {dynamicData} }"&gt;Clicks:{ {dynamicData} }&lt;/div&gt;\n        &lt;button&gt; class="button"&gt;Click&lt;/button&gt;\n      &lt;/div&gt;`,\n    {\n      script: ({ element, functions }) =&gt; {\n        const button = element.querySelector(".button");\n        const updateFunction = () =&gt; {\n          functions?.updateClicks((data) =&gt; {\n            return data + 1;\n          });\n        };\n        button.addEventListener("click", updateFunction);\n      },\n      data: () =&gt; {\n        return {\n          dynamicData: 0,\n        };\n      },\n      dataFunctions: {\n        updateClicks: "dynamicData",\n      },\n    }\n  );\n  cample("#page", {\n    trimHTML: true,\n  }).render(\n    `\n    &lt;template&gt; data-cample="new-component"&gt;&lt;/template&gt;\n    `,\n    {\n        newComponent,\n    }\n);</code></pre> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/component.html">Component</a> </li> </ul> </h4></div> </div>'),st=new Ie("each-component",'<div id="documentation_main"> <template data-cample="sidebar-component"></template> <div class="documentation_page"> <h1>Each</h1> <hr class="section_line"> <h2>About</h2> <p>The Each component is used to create repetition of HTML markup.</p> <h2>Class function</h2> <pre><code>const newEach = each("new-each",\n    ()=>["val"],\n    "&lt;div key={ {index} }&gt;&lbrace; &lbrace;data&rbrace; &rbrace;&lt;/div&gt"\n);</code></pre> <h3>Render in HTML file:</h3> <h4>HTML file</h4> <h5>before render</h5> <pre><code>&lt;template data-cample="new-each"&gt;\n    &lt;div&gt;text&lt;/div&gt;\n    &lt;div&gt;text&lt;/div&gt;\n&lt;/template&gt;</code></pre> <h5>after render</h5> <pre><code>&lt;div&gt;text&lt;/div&gt;\n&lt;div&gt;text&lt;/div&gt;</code></pre> <h2>Arguments</h2> <p>The Each component has four arguments, the first is the value of the "data-cample" attribute (selector), the second is data, the third is an HTML template containing string interpolation, and the fourth is a settings object.</p> <h3>selector</h3> <p>The selector is the value of the "data-cample" attribute of the template in which the component will be rendered. For example, if the selector is set to "new-selector", then the HTML "template" into which the component will be rendered will look like this:</p> <pre><code>&lt;template data-cample="new-each"&gt;&lt;/template&gt;</code></pre> <p>It is worth noting that there can be as many "template" tags on a site as you like (within the memory of the machine where the site is located). That is, if there are 100 "templates" with the "new-each" attribute, then 100 components will be rendered.</p> <h3>data</h3> <p>The data is a function that returns an array on which to perform repetition of the HTML markup. An examples of a data:</p> <pre><code>({importedData, currentData})=>[\n    ...importedData,\n    ...currentData,\n    "value"\n]</code></pre> <p>Also, the function arguments receive an object with two properties, the first of which is the current data, and the second is the imported data. In order to modify the old data thanks to the new ones without overwriting the old ones, the current data is provided.</p> <h3>template</h3> <p>A template is essentially a string that will be rendered in a "template" with a "data-cample" attribute. The template is different from the <a href="/documentation/component.html">Component</a> template. This template does not yet support the "data-cample-import" attribute, but other syntaxes such as ":event" are supported. In future versions, all templates will be brought to the same syntax.</p> <pre><code>&lt;div key={ {index} } class="{ {importedData.data} }"&gt;\n    &lt;div id="{ {currentData.data} }"&gt;\n        &lt;div :click={ {setData(currentData.data)} } &gt;{ { data.data } }&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>Also, a necessary property for template is the "key" property. This property must be unique. It is needed to ensure that blocks are not overwritten when processing new data.</p> <p>The keys by which the data will be processed in the template will be the same keys that are specified in the valueName, importedDataName, indexName and functionName properties.</p> <p>Each also provides for adding an event listener for the element via string interpolation. The template itself looks like ":event="function(argumentsData)"". The data that is processed by the function in the arguments is only the data keywords from the data passed to the "template" in the string interpolation. These are data such as importedData, currentData, functions, data.</p> <h3>options</h3> <p>The options object describes the scripts, attributes, data, styles of the component, etc. Each of the listed properties describes a property of an object.</p> <h4>script</h4> <p>An array with two values is passed to the script object property, the first of which is a function that accepts the values of the component element, current data, as well as dynamic data functions and imported data and is triggered depending on the settings, and the second value is a script settings object that accepts one argument : "start". This argument takes three values: “beforeLoad”, “afterLoad” and undefined. This setting describes when the script function should be executed before or after the component is loaded. If the values are not defined, the function will be loaded after. Example script:</p> <pre><code>{\n    script: [\n        ({ element, functions, currentData, importedData }) => {\n        element.addEventListener("click", () => {\n            console.log(elements.component);\n        });\n        const updateFunction = (e) => {\n            functions?.updateText((data) => {\n                return "newText";\n            });\n        };\n        document.addEventListener("onload", updateFunction);\n            console.log(data);\n        },\n        {\n            start: "beforeLoad",\n        },\n    ],\n    functionName:"updateText"\n}</code></pre> <p>Also, the framework supports a script without an array. That is, a function can also be passed to a value.</p> <pre><code>{\n    script:({ element, functions, currentData, importedData })=>{\n        console.log("123");\n    }\n}</code></pre> <p>The function is running after loading by default.</p> <h4>iteration</h4> <p>The iteration property specifies a function that iterates exactly as many times as the number of times Each is iterated.</p> <pre><code>{\n    iteration:({ data, importedData }, index)=>{\n        console.log("123");\n    }\n}</code></pre> <p>As arguments, the function receives as the first argument an object with iteration data, the default name of which comes from "valueName" and imported data, the default name of which comes from "importedDataName", and also receives the number in the iteration as the second argument.</p> <h4>valueName</h4> <p>The valueName property sets the name of the property by which data will be available for the corresponding iteration of Each. An example of the valueName:</p> <pre><code>{\n    valueName:"dataValue"\n}</code></pre> <p>In this example, valueName is set to the value "dataValue", by which the data of a particular iteration will be available in the template. By default, valueName is "value".</p> <h4>indexName</h4> <p>The valueName property specifies the name of the property by which the iteration number will be available.</p> <pre><code>{\n    indexName:"i"\n}</code></pre> <p>In this example, indexName is set to "i", by which the iteration number will be available in template. By default, indexName is "index". Just like in vanilla js, iteration numbers start from 0.</p> <h4>functionName</h4> <p>The functionName property specifies the name of the function that changes the data in the "script" and template. An example of the functionName:</p> <pre><code>{\n    functionName:"dataFunction"\n}</code></pre> <p>In this example, functionName is set to "dataFunction" which will access the function in the "script" or template that will update the data. The default functionName is "setData".</p> <h4>functions</h4> <p>The functions property takes in an object of properties whose value is an array with the function and the name of the updating function from functionName.</p> <pre><code>{\n    functionName:"setComponentText",\n    valueName:"component_text",\n    functions: {\n        updateComponentText: [\n          (setData) => (arguments) => {\n            setData(() => "123");\n          },\n          "setComponentText",\n        ],\n    }\n}</code></pre> <p>In the array, the first function will receive the data updating function from dataFunctions as the first argument, and all the arguments that were specified either in the template or in the script object will be passed to the second function. Using a closure, the second function will have access to both the arguments that were passed and the updating function.</p> <p>In template, a call to such a function will look like this:</p> <pre><code>&lt;div class="{ {component_text} }"&gt;\n    &lt;div id="{ {component_text} }"&gt;\n        &lt;div :click={ {updateComponentText(setComponentText)} } &gt;{ {setComponentText} }&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code></pre> <p>As arguments in this form, the function takes only property names from the data argument. All event names come from vanilla in javascript, as if the addEventListener method was applied to the element.</p> <h4>importedDataName</h4> <p>The importedData property specifies the name of the imported data. An example of the importedData:</p> <pre><code>{\n    importedDataName:"newData"\n}</code></pre> <p>In this example, importedDataName is set to "newData" which will access the importedData in the "script" and template. The default importedDataName is "importedData".</p> <h4>attributes</h4> <p>The attributes property contains an object of the HTML attributes and their values that will be processed in the template. An example of the attributes:</p> <pre><code>("new-each",\n...,\n{\n    attributes:{\n        id:"id"\n    }\n})</code></pre> <p>In this example, a template with a "data-cample" value of "new-each" will be given a id "id".</p> <h4>import</h4> <p>The import property sets the "data-cample-import" attribute. This attribute specifies data to import specific exported data. An example of the import:</p> <pre><code>import:{\n    value:["text"],\n    exportId:"textId"\n}</code></pre> <p>For example, if a component was given import data in other components, then the import object will overwrite them in the tag attribute.</p> <h5>value</h5> <p>The value property on the import object specifies a list of exported values that will be imported into the component. An example of the value:</p> <pre><code>{\n    value:["text", "text1"]\n}</code></pre> <p>In this example, two values are passed to the "data-cample-import" property: "text" and "text1".</p> <h5>exportId</h5> <p>In order to understand which component to import data from, the import object provides such a property as exportId. This property is set in the component that exports the data. It is set either in the options object. An example of the exportId:</p> <pre><code>{\n    exportId:"textId"\n}</code></pre> <p>In this example, the data will be imported from a component that will have its exportId set to "textId".</p> <h4>export</h4> <b>Export under cunstruction!</b> <h4>exportId</h4> <p>The exportId property specifies the export identifier, by which the component will "determine" where to get the data from. An example of the exportId:</p> <pre><code>{\n    exportId:"textId"\n}</code></pre> <p>In this example, to export specific data, "exportId" is set with the value "textId".</p> <h4>style</h4> <p>The style property contains a string that is inserted into the HTML style tag. This string is the stylesheet syntax, i.e. cascading style sheets syntax. An example of a style:</p> <pre><code>{\n    style:`\n        .component{\n            width:100px;\n            height:100px;\n        }\n    `\n}</code></pre> <p>Each styles are rendered in the style tag, thus it is possible to create styles in one component for another.</p> <h4>values</h4> <p>The values property takes the value of an object whose property has a value of an object that generates dynamic data depending on a condition.</p> <pre><code>values: {\n    selectedValue: {\n        "currentData.select === currentData.true":"selected",\n        "!(currentData.currentClass && currentData.false) == currentData.anotherProperty":["class1","{ {currentData.class2} }"]\n    },\n}</code></pre> <p>In this example, only the values from the data property are used in the conditions; in their values, you can write both regular text and text with string interpolation. If the value is a string, then if true, the value will be this string, and if false, then "". If the value is an array of two strings, then it works like a ternary operator, when if true is the first value, if false is the second value.</p> <b>**Also, it’s worth noting that difficult conditions are still being tested! The code may produce other values of true or false! It is highly recommended to use simple conditions with one or more operators!**</b> <h5>HTML before</h5> <pre><code>&lt;div class="class { { [selectedValue] } }"&gt;\n    { { [selectedValue] } }\n&lt;/div&gt;</code></pre> <h5>HTML after</h5> <pre><code>&lt;div class="class selected class1"&gt;\n    selected\n&lt;/div&gt;</code></pre> <p>Also, it\'s worth noting that in string interpolation, values are "passed as an array". The key to the dynamic string in this example is the "selectedValue" value.</p> <h4>trimHTML</h4> <p>Depending on the value of the trimHTML property, the javascript trim() method is applied to the HTML string.</p> <pre><code>{\n  trimHTML:false\n}</code></pre> <p>This will avoid the errors associated with rendering a single Element in the component, but also the HTML may not be displayed correctly.</p> <h2>Example code</h2> <pre><code>const newEach = new Each(\n"new-each",\n() => ["val1", "val2"],\n`&lt;tr key={ {index} } id="row" class="{ {[selected]} }"&gt;\n    &lt;td&gt;{ {row.id} }&lt;/td&gt;\n    &lt;td&gt;&lt;a :click="{ {importedData.setSelected(row.id)} }"&gt;{ {row.label} }&lt;/a&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;`,\n{\n    values:  {\n        selected: {\n            "row.id === importedData.selected": "selected",\n        },\n    },\n    script: [\n        (obj) => console.log(obj),\n    {\n        start:"afterLoad"\n    },\n    ],\n    functions: {\n        updateRow: [\n          (setData) => (arguments) => {\n            setData(() => "123");\n          },\n          "updateTable",\n        ],\n    }\n    valueName: "row",\n    functionName: "updateTable",\n    importedDataName: "importData",\n    import: {\n        value: ["rows", "selected", "setSelected"],\n        exportId: "mainExport",\n    },\n    exportId: "exportId",\n    trimHTML: true,\n    style: "#row{ width:10px; }",\n    attributes: {\n        id: "id",\n    },\n}\n);</code></pre> <h2>Each table</h2> <table> <thead> <tr> <th colspan="3">Arguments</th> </tr> <tr> <th>Name</th> <th>Usage</th> <th>Type</th> </tr> </thead> <tbody> <tr> <td>selector</td> <td>The value of the "data-cample" property of the template tag into which the component will be rendered.</td> <td>SelectorType</td> </tr> <tr> <td>data</td> <td>Data for repeating HTML markup.</td> <td>EachDataFunctionType</td> </tr> <tr> <td>template</td> <td>HTML rendering template including string interpolation.</td> <td>string</td> </tr> <tr> <td>options</td> <td>Object options.</td> <td>EachOptionsType | undefined</td> </tr> </tbody> </table> <h2>Articles</h2> <ul class="list"> <li class="list_item"> <a href="/documentation/Component.html">Component</a> </li> </ul> </div> </div>'),lt=new Ie("clicker-component",'<div id="examples_main"> <template data-cample="sidebar-component"></template> <div class="example_page"> <h1 class="title">Clicker</h1> <p class="codepen" data-height="700px" data-theme-id="light" data-default-tab="js,result" data-slug-hash="rNrVjmp" data-editable="true" data-user="Camplejs" style="height:700px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/rNrVjmp"> Reactivity without Virtual DOM</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> '),ct=new Ie("taskTracker-component",'<div id="examples_main"> <template data-cample="sidebar-component"></template> <div class="example_page"> <h1 class="title">Task Tracker</h1> <p class="codepen" data-height="700px" data-theme-id="light" data-default-tab="js,result" data-slug-hash="bGORJPG" data-editable="true" data-user="Camplejs" style="height:700px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/bGORJPG"> Task Tracker</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> '),pt=new Ie("tabs-component",'<div id="examples_main"> <template data-cample="sidebar-component"></template> <div class="example_page"> <h1 class="title">Tabs</h1> <p class="codepen" data-height="700px" data-theme-id="light" data-default-tab="js,result" data-slug-hash="RwdqRaY" data-editable="true" data-user="Camplejs" style="height:700px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/RwdqRaY"> Tabs</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> '),dt=new Ie("dataTable-component",'<div id="examples_main"> <template data-cample="sidebar-component"></template> <div class="example_page"> <h1 class="title">Data Table</h1> <p class="codepen" data-height="700" data-theme-id="light" data-default-tab="js,result" data-slug-hash="WNmYdLX" data-editable="true" data-user="Camplejs" style="height:700px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em"> <span>See the Pen <a href="https://codepen.io/Camplejs/pen/WNmYdLX"> Data Table</a> by Cample.js (<a href="https://codepen.io/Camplejs">@Camplejs</a>) on <a href="https://codepen.io">CodePen</a>.</span> </p> </div> </div> '),ht=screen.width<=768||window.matchMedia&&window.matchMedia("only screen and (max-width: 768px)").matches;function mt(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o={header:Ve,footer:Se};const r=""===window.location.pathname.slice(1)||"examples.html"===window.location.pathname.slice(1)||"examples/clicker.html"===window.location.pathname.slice(1)||"examples/tabs.html"===window.location.pathname.slice(1)||"examples/taskTracker.html"===window.location.pathname.slice(1)||"examples/dataTable.html"===window.location.pathname.slice(1);return r&&(o.note=at),Object.keys(t).forEach((e=>{o[e]=t[e]})),new U(e,{trimHTML:!0}).render(`\n        ${r?"{{note}}":""}\n        {{header}}\n        <div id="content">\n        ${n}\n        </div>\n        ${a?"{{footer}}":""}\n    `,o)}switch(console.log("Cample.js - fast modern javascript framework."),window.location.pathname.slice(1)){case"":mt("#page",{content:Ue,button:nt},"{{content}}",!0);break;case"examples.html":mt("#examples",{examples:Ge,sidebarExample:ze},"{{examples}}",!0);break;case"examples/clicker.html":mt("#examples",{clicker:lt,sidebarExample:ze},"{{clicker}}",!0);break;case"examples/tabs.html":mt("#examples",{tabs:pt,sidebarExample:ze},"{{tabs}}",!0);break;case"examples/taskTracker.html":mt("#examples",{taskTracker:ct,sidebarExample:ze},"{{taskTracker}}",!0);break;case"examples/dataTable.html":mt("#examples",{dataTable:dt,sidebarExample:ze},"{{dataTable}}",!0);break;case"documentation.html":mt("#documentation",{documentation:Je,sidebar:$e},"{{documentation}}",ht);break;case"documentation/cample.html":mt("#documentation",{cample:Ye,sidebar:$e},"{{cample}}",ht);break;case"documentation/installation.html":mt("#documentation",{installation:We,sidebar:$e},"{{installation}}",ht);break;case"documentation/component.html":mt("#documentation",{component:Xe,sidebar:$e},"{{component}}",ht);break;case"documentation/each.html":mt("#documentation",{each:st,sidebar:$e},"{{each}}",ht);break;case"documentation/getting-started.html":mt("#documentation",{gettingStarted:tt,sidebar:$e},"{{gettingStarted}}",ht);break;case"documentation/introduction.html":mt("#documentation",{introduction:Ze,sidebar:$e},"{{introduction}}",ht);break;case"documentation/types.html":mt("#documentation",{types:Qe,sidebar:$e},"{{types}}",ht);break;case"documentation/reactivity.html":mt("#documentation",{reactivity:it,sidebar:$e},"{{reactivity}}",ht)}})()})();